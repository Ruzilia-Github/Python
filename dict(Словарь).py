# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ), —á–µ–π –Ω–æ–º–µ—Ä –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 88.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ò–º–µ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ä–∞–∑–¥–µ–ª—è—è —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.


#
# users = [{'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
#          {'name': 'Helga', 'phone': '555-1618', 'email': 'helga@mail.net'},
#          {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
#          {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
#          {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
#          {'name': 'John', 'phone': '233-421-32', 'email': ''},
#          {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
#          {'name': 'Alina', 'phone': '+7948-799-2434', 'email': 'ali.ch.b@gmail.com'},
#          {'name': 'Robert', 'phone': '420-2011', 'email': ''},
#          {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
#          {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
#          {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
#          {'name': 'Roman', 'phone': '+7459-145-8059', 'email': 'roma988@mail.ru'},
#          {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
#          {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
#          {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}]
# a = []
# for key in users:
#     if key["phone"][-1] == "8":
#         a.append(key["name"])
# print(*(sorted(a)))
# ______________________________________________________________
#
# print(*sorted([x['name'] for x in users if x['phone'][-1] == '8']))


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ), —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ö–ª—é—á email –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ò–º–µ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ä–∞–∑–¥–µ–ª—è—è —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.


# /
# __________________________________________________________________________
# # list=[]
# for i in users:
#     if i.get("email")==None or len(i.get("email")) == 0:
#         list.append(i.get("name"))
#
# print(list)
# _______________________________________________________________
# a = []
# for key in users:
#     try:
#         if len(key['email']) == 0:
#             a.append(key["name"])
#     except:
#         if "email" not in users:
#             a.append(key["name"])
#
# print(*(sorted(a)))
# _______________________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É, –∑–∞–º–µ–Ω—è—è –≤—Å–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∏—Å–ª–µ –Ω–∞ —Å–ª–æ–≤–∞:
#
# 00 –Ω–∞ zero;
# 11 –Ω–∞ one;
# 22 –Ω–∞ two;
# 33 –Ω–∞ three;
# 44 –Ω–∞ four;
# 55 –Ω–∞ five;
# 66 –Ω–∞ six;
# 77 –Ω–∞ seven;
# 88 –Ω–∞ eight;
# 99 –Ω–∞ nine.
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å –≤–º–µ—Å—Ç–æ —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.


# my_dict = {'0': 'zero', '1': 'one', '2': 'two', '3': 'three', '4': 'four', '5': 'five', '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine'}
# n= input()
# a = []
# for key in n:
#     a.append(my_dict[key])
# print(*a)
# _______________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –Ω–æ–º–µ—Ä—É –∫—É—Ä—Å–∞ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –∫—É—Ä—Å–µ.
#
# –ù–æ–º–µ—Ä –∫—É—Ä—Å–∞ (–∫–ª—é—á)	–ù–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (–∑–Ω–∞—á–µ–Ω–∏–µ)	–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å (–∑–Ω–∞—á–µ–Ω–∏–µ)	–í—Ä–µ–º—è (–∑–Ω–∞—á–µ–Ω–∏–µ)
# CS101	3004	–•–∞–π–Ω—Å	8:00
# CS102	4501	–ê–ª—å–≤–∞—Ä–∞–¥–æ	9:00
# CS103	6755	–†–∏—á	10:00
# NT110	1244	–ë–µ—Ä–∫	11:00
# CM241	1411	–õ–∏	13:00
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äì –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞, –∑–∞—Ç–µ–º –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å –≤–º–µ—Å—Ç–æ —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ format() –∏–ª–∏ f-—Å—Ç—Ä–æ–∫–∏.
#
# Sample Input 1:
#
# CS101
# Sample Output 1:
#
# CS101: 3004, –•–∞–π–Ω—Å, 8:00


# d = {
#     "CS101": "CS101: 3004, –•–∞–π–Ω—Å, 8:00",
#     "CS102": "CS102: 4501, –ê–ª—å–≤–∞—Ä–∞–¥–æ, 9:00",
#     "CS103": "CS103: 6755, –†–∏—á, 10:00",
#     "NT110": "NT110: 1244, –ë–µ—Ä–∫, 11:00",
#     "CM241": "CM241: 1411, –õ–∏, 13:00"
# }
#
#
# print(f"{d[input()]}")
#
# ____________
#
# d = {
#     "CS101": "3004, –•–∞–π–Ω—Å, 8:00",
#     "CS102": "4501, –ê–ª—å–≤–∞—Ä–∞–¥–æ, 9:00",
#     "CS103": "6755, –†–∏—á, 10:00",
#     "NT110": "1244, –ë–µ—Ä–∫, 11:00",
#     "CM241": "1411, –õ–∏, 13:00"
# }
# s = input()
# print(f'{s}: {d[s]}')
# ____________________________________________________________________________
# –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ—á–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–∞—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å –ø–æ–º–æ—â—å—é —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –ü–æ—Å–∫–æ–ª—å–∫—É —Å –∫–∞–∂–¥–æ–π –∫–ª–∞–≤–∏—à–µ–π —Å–≤—è–∑–∞–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±—É–∫–≤, –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –±—É–∫–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à. –ü—Ä–∏ –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏ —Ü–∏—Ñ—Ä—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª, —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–ª—è —ç—Ç–æ–π –∫–ª–∞–≤–∏—à–∏. –ù–∞–∂–∞—Ç–∏–µ —Ü–∏—Ñ—Ä—ã 2, 3, 42,3,4 –∏–ª–∏ 55 —Ä–∞–∑ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Ç–æ—Ä–æ–π, —Ç—Ä–µ—Ç–∏–π, —á–µ—Ç–≤–µ—Ä—Ç—ã–π –∏–ª–∏ –ø—è—Ç—ã–π —Å–∏–º–≤–æ–ª –∫–ª–∞–≤–∏—à–∏.
#
# 1	.,?!:
# 2	ABC
# 3	DEF
# 4	GHI
# 5	JKL
# 6	MNO
# 7	PQRS
# 8	TUV
# 9	WXYZ
# 0	space (–ø—Ä–æ–±–µ–ª)
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äì —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–ø–∏—Å–Ω—ã–µ, —Ç–∞–∫ –∏ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª—é–±—ã–µ —Å–∏–º–≤–æ–ª—ã, –Ω–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –≤—ã—à–µ —Ç–∞–±–ª–∏—Ü–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. Nokia 3310, —á—Ç–æ–±—ã –≤—Å–ø–æ–º–Ω–∏—Ç—å –∫–∞–∫ —ç—Ç–æ –±—ã–ª–æ üòÑ
#
#
#
# –ü–æ–¥—Å–∫–∞–∑–∫–∞
# –°–æ–∑–¥–∞–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥–∞—è –±—É–∫–≤–∞ –∏–ª–∏ —Å–∏–º–≤–æ–ª —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å –Ω–∞–∂–∞—Ç–∏—è–º–∏ –∫–ª–∞–≤–∏—à, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –¥–ª—è –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è.
#
# Sample Input 1:
#
# Hello, World!
# Sample Output 1:
#
# 4433555555666110966677755531111
#
# d={".":'1', ",":'11', "?":'111', "!":'1111', ":":'11111',
#     "A":'2', "B":'22', "C":'222',
#     "D":'3', "E":'33', "F":'333',
#     "G":'4', "H":'44', "I":'444',
#     "J":'5', "K":'55', "L":'555',
#     "M":'6', "N":'66', "O":'666',
#     "P":'7', "Q":'77', "R":'777', "S": '7777',
#     "T":'8', "U":'88', "V":'888',
#     "W":'9', "X":'99', "Y":'999', "Z": '9999',
#     " ":'0'
# }
#
# a = ''
# for key in input().upper():
#     try:
#         a += d[key]
#     except:
#         if key not in d:
#             continue
#
# print(a)
#
# ________________________________________________________________________
#
# letters = [c for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789']
# morse = ['.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---', '-.-', '.-..', '--', '-.', '---', '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-', '-.--', '--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...', '---..', '----.']
# d = dict(zip(letters, morse))
# a = ''
# for key in input().upper():
#     try:
#         a += d[key] + " "
#     except:
#         if key not in d:
#             continue
#
# print(a)


#
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result —Ö—Ä–∞–Ω–∏–ª—Å—è —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ ‚Äì —á–∏—Å–ª–∞ –æ—Ç 11 –¥–æ 1515 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ), –∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –∫–≤–∞–¥—Ä–∞—Ç—ã –∫–ª—é—á–µ–π.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è result –Ω–µ –Ω—É–∂–Ω–æ.

# n = [i for i in range(1,16)]
# n2 = [i**2 for i in range(1,16)]
# d = dict(zip(n, n2))
# print(d)
# _____________
#
# result = {i: i**2 for i in range(1, 16)}
# print(result)
# ______________
# result = {}
# for i in range(1, 16):
#     result.setdefault(i, i**2)
# ____________________________________________________________________________

# dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
# dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
# # result = dict1 | dict2
# dict1.update(dict2)
# result = dict1
# dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
# dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
# for i in result:
#     try:
#       if i in dict1:
#           result[i] = dict1[i] + dict2[i]
#     except:
#         result[i]=result[i]
# print(result)

# _____________________

# dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
# dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
#
# result = {i: dict1.get(i, 0) + dict2.get(i, 0) for i in set(dict1.keys() | dict2.keys())}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result —Ö—Ä–∞–Ω–∏–ª—Å—è —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏ text –±—É–¥–µ—Ç –ø–æ–¥—Å—á–∏—Ç–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è result –Ω–µ –Ω—É–∂–Ω–æ.

# text = 'footballcyberpunkextraterritorialityconversationalistblockophthalmoscopicinterdependencemamauserfff'
# result = {}
# for num in text:
#     result[num] = result.get(num, 0) + 1
# print(result)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–µ–µ—Å—è —Å–ª–æ–≤–æ —Å—Ç—Ä–æ–∫–∏ s. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–≤–µ–¥–µ–Ω–æ —Ç–æ, —á—Ç–æ –º–µ–Ω—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ.

import collections
s = 'orange strawberry barley gooseberry apple apricot barley currant orange melon pomegranate banana banana orange barley apricot plum grapefruit banana quince strawberry barley grapefruit banana grapes melon strawberry apricot currant currant gooseberry raspberry apricot currant orange lime quince grapefruit barley banana melon pomegranate barley banana orange barley apricot plum banana quince lime grapefruit strawberry gooseberry apple barley apricot currant orange melon pomegranate banana banana orange apricot barley plum banana grapefruit banana quince currant orange melon pomegranate barley plum banana quince barley lime grapefruit pomegranate barley'

# n = [i for i in s.split()]
# result={}
# for j in n:
#     result[j] = result.get(j, 0)+1
# # print(result)
# # print(max(result.values()))
# a = []
# for z in result:
#     try:
#         if result[z] == max(result.values()):
#             a.append(z)
#     except:
#         continue
# print(a[0])
#
# pets = [('Hatiko', 'Parker', 'Wilson', 50),
#         ('Rusty', 'Josh', 'King', 25),
#         ('Fido', 'John', 'Smith', 28),
#         ('Butch', 'Jake', 'Smirnoff', 18),
#         ('Odi', 'Emma', 'Wright', 18),
#         ('Balto', 'Josh', 'King', 25),
#         ('Barry', 'Josh', 'King', 25),
#         ('Snape', 'Hannah', 'Taylor', 40),
#         ('Horry', 'Martha', 'Robinson', 73),
#         ('Giro', 'Alex', 'Martinez', 65),
#         ('Zooma', 'Simon', 'Nevel', 32),
#         ('Lassie', 'Josh', 'King', 25),
#         ('Chase', 'Martha', 'Robinson', 73),
#         ('Ace', 'Martha', 'Williams', 38),
#         ('Rocky', 'Simon', 'Nevel', 32)]
#
# list = []
# dog_owner = {}
# from pprint import pprint
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
#
# pprint(dog_owner)
#
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
# result=dog_owner
# ____________________________________________________________________________________________
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ä–µ–∂–µ –≤—Å–µ–≥–æ, –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –≤—ã–≤–µ–¥–∏—Ç–µ —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–µ–Ω—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ (–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ), –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Ä–µ–∂–µ –≤—Å–µ–≥–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É, —Å–ª–æ–≤–∞ apple –∏ Apple –¥–æ–ª–∂–Ω–∞ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–æ–≤–æ ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤. –ö—Ä–æ–º–µ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ –º–æ–≥—É—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è .,!?:;-, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å. –î—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç.
#
# Sample Input 1:
#
# home sweet home
# Sample Output 1:
#
# sweet
#
#
#
# import re
# n = input().lower().split()
# a = []
# for i in n:
#     words = re.sub(r'[.,;:-?-!]', '', i)
#     a.append(words)
# result = {}
# for num in a:
#     result[num] = result.get(num, 0) + 1
# lst = [(value, key) for key, value in result.items()]
# lst.sort()
# print(lst[0][1])

# ______________________
# dct = {}
# lst = [word.strip('.,!?:;-') for word in input().lower().split()]
# for word in lst:
#     dct[word] = dct.get(word, 0) + 1
# lst = [(value, key) for key, value in dct.items()]
# print(lst)
# lst.sort()
# print(lst[0][1])
# _______________________________________________________________________________________________
#
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å—Ç—Ä–æ–∫–∏-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö —Ç–∞–∫, —á—Ç–æ–±—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –Ω–µ –±—ã–ª–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–±–∞–≤–ª—è—Ç—å –∫ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º –ø–æ—Å—Ç—Ñ–∏–∫—Å _n, –≥–¥–µ n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, —Å–∫–æ–ª—å–∫–æ —Ç–∞–∫–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å—Ç—Ä–æ–∫–∏-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â—É—é –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫.
#
# Sample Input 1:
#
# a b c a a d c
# Sample Output 1:
#
# a b c a_1 a_2 d c_1

# a=input().split()
# for i in range(len(a)):
#     if a[i] not in a[:i]:
#         print(a[i],end=' ')
#     else:
#         print(f"{a[i]}_{a[:i].count(a[i])}", end=' ')
# ___________________
# lst = input().split()
# res = {}
# for c in lst:
#     if c in res:
#         print(f'{c}_{res[c]}', end=' ')
#     else:
#         print(c, end=' ')
#     res[c] = res.get(c, 0) + 1


# pets = [('Hatiko', 'Parker', 'Wilson', 50),
#         ('Rusty', 'Josh', 'King', 25),
#         ('Fido', 'John', 'Smith', 28),
#         ('Butch', 'Jake', 'Smirnoff', 18),
#         ('Odi', 'Emma', 'Wright', 18),
#         ('Balto', 'Josh', 'King', 25),
#         ('Barry', 'Josh', 'King', 25),
#         ('Snape', 'Hannah', 'Taylor', 40),
#         ('Horry', 'Martha', 'Robinson', 73),
#         ('Giro', 'Alex', 'Martinez', 65),
#         ('Zooma', 'Simon', 'Nevel', 32),
#         ('Lassie', 'Josh', 'King', 25),
#         ('Chase', 'Martha', 'Robinson', 73),
#         ('Ace', 'Martha', 'Williams', 38),
#         ('Rocky', 'Simon', 'Nevel', 32)]

# list = []
# dog_owner = {}
# from pprint import pprint
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
#
# pprint(dog_owner)
#
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
# result=dog_owner

#
# list = []
# dog_owner = {}
# from pprint import pprint
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
#
# pprint(dog_owner)
#
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
# result=dog_owner

#
# n = int(input())
# key_dic = []
# value_dic = []
# for i in range(n):
#     a = input().split(": ")
#     key_dic.append(a[0].lower())
#     value_dic.append(a[1])
# dic = dict(zip(key_dic, value_dic))
# n2 = int(input())
# for j in range(n2):
#      a2 = input().lower()
#      print(dic.get(a2, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"), sep='\n')
# ______________________

# result = {}
# for i in range(int(input())):
#     tmp = input().split(': ')
#     result[tmp[0].lower()] = tmp[1]
#     print(result)
# for i in range(int(input())):
#     print(result.get(input().lower(), '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'))


# ________________________________________________________________________________________________
# –ê–Ω–∞–≥—Ä–∞–º–º–∞ ‚Äì —Å–ª–æ–≤–æ (—Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ), –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—É—Ç—ë–º –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—É–∫–≤, —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏—Ö –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ (–∏–ª–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ). –ù–∞–ø—Ä–∏–º–µ—Ä, –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ evil –∏ live ‚Äì —ç—Ç–æ –∞–Ω–∞–≥—Ä–∞–º–º—ã.
#
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —Å–ª–æ–≤–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ –∞–Ω–∞–≥—Ä–∞–º–º–∞–º–∏.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —Å–ª–æ–≤–∞, –∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ YES –µ—Å–ª–∏ —Å–ª–æ–≤–∞ —è–≤–ª—è—é—Ç—Å—è –∞–Ω–∞–≥—Ä–∞–º–º–∞–º–∏ –∏ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
#
# Sample Input 1:
#
# thing
# night
#
# n1 = input()
# n2 = input()
# dic1 = {}
# for i in n1:
#     dic1[i] = dic1.get(i, 0) + 1
# dic2 = {}
# for i in n2:
#     dic2[i] = dic2.get(i, 0) + 1
# print(['NO', "YES"][dic2 == dic1])
# _____________
#
# print('YES' if sorted(input()) == sorted(input()) else 'NO')
# _____________
# s1=input().lower().strip('!,.,,,!,?,:,;,-''').replace(' ','').replace('!','')
# s2=input().lower().strip('!,.,,,!,?,:,;,- ').replace(' ','').replace('!','')
# print('YES' if {x:s1.count(x) for x in s1}=={x:s2.count(x) for x in s2} else 'NO')
#
# ____________________________________________________________________________________
# –í–∞–º –¥–∞–Ω —Å–ª–æ–≤–∞—Ä—å, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –ø–∞—Ä —Å–ª–æ–≤-—Å–∏–Ω–æ–Ω–∏–º–æ–≤. –ü–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–µ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –æ–¥–Ω–æ–≥–æ –¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ —Å–∏–Ω–æ–Ω–∏–º.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä —Å–∏–Ω–æ–Ω–∏–º–æ–≤ nn. –î–∞–ª–µ–µ —Å–ª–µ–¥—É–µ—Ç nn —Å—Ç—Ä–æ–∫, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–∞ —Å–ª–æ–≤–∞-—Å–∏–Ω–æ–Ω–∏–º–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Å–∏–Ω–æ–Ω–∏–º –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –Ω–∞–π—Ç–∏.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Å–∏–Ω–æ–Ω–∏–º –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Å–∏–Ω–æ–Ω–∏–º –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í—Å–µ —Å–ª–æ–≤–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã.
#
# Sample Input 1:
#
# 4
# Awful Terrible
# Beautiful Pretty
# Great Excellent
# Generous Bountiful
# Pretty
# Sample Output 1:
#
# Beautiful


# for key, value in prog.items():
#       if word == key:
#          print(value)
#       if word == value:
#          print(key)
# ____________________
#
# words = {}
# for _ in range(int(input())):
#     a, b = input().split()
#     print(a)
#     print(b)
#     words[a], words[b] = b, a
# print(words[input()])
# _____________________

# d = dict((input().split() for i in range(int(input()))))
# ad = {v: k for k, v in d.items()}
# key = input()
# print(ad.get(key, d.get(key)))

# ___________________________________________________________________________
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –∏ –≥–æ—Ä–æ–¥–æ–≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã. –ó–∞—Ç–µ–º –¥–∞–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –≤—ã–≤–æ–¥–∏—Ç, –≤ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω nn. –î–∞–ª–µ–µ –∏–¥–µ—Ç nn —Å—Ç—Ä–æ–∫, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, –∑–∞—Ç–µ–º –∏–¥—É—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã. –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ —á–∏—Å–ª–æ mm, –¥–∞–ª–µ–µ –∏–¥—É—Ç mm –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–∫–∏—Ö-—Ç–æ mm –≥–æ—Ä–æ–¥–æ–≤, –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤—ã—à–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –¥–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–æ–º.
#
# Sample Input:
#
# 2
# –ì–µ—Ä–º–∞–Ω–∏—è –ë–µ—Ä–ª–∏–Ω –ú—é–Ω—Ö–µ–Ω –ì–∞–º–±—É—Ä–≥ –î–æ—Ä—Ç–º—É–Ω–¥
# –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã –ê–º—Å—Ç–µ—Ä–¥–∞–º –ì–∞–∞–≥–∞ –†–æ—Ç—Ç–µ—Ä–¥–∞–º –ê–ª–∫–º–∞—Ä
# 4
# –ê–º—Å—Ç–µ—Ä–¥–∞–º
# –ê–ª–∫–º–∞—Ä
# –ì–∞–º–±—É—Ä–≥
# –ì–∞–∞–≥–∞


# n = int(input())
# dic = {}
# dic_all = {}
# for i in range(n):
#     words = input().split()
#     a, *b = words
#     for j in b:
#         dic[j] = [a]
#         dic_all.update(dic)
# n2 = int(input())
# for j in range(n2):
#     word = input()
#     print(*dic_all[word])
# ___________________

# dct = {}
# for _ in range(int(input())):
#     a, *b = input().split()
#     dct.update(dict.fromkeys(b, a))
# for _ in range(int(input())):
#     print(dct[input()])
# ______________________
#
# d={}
# for _ in range(int(input())):
#     a=input().split()
#     for c in a[1:]:
#         d[c]=a[0]
#         print(d)
# for _ in range(int(input())):
#     print(d[input()])

# –¢–∏–º—É—Ä –∑–∞–ø–∏—Å–∞–ª —Ç–µ–ª–µ—Ñ–æ–Ω—ã –≤—Å–µ—Ö —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π, —á—Ç–æ–±—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞.
#
# –£ –∫–∞–∂–¥–æ–≥–æ –∏–∑ –¥—Ä—É–∑–µ–π –¢–∏–º—É—Ä–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–∏–Ω –∏–ª–∏ –±–æ–ª–µ–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –¢–∏–º—É—Ä—É –Ω–∞—Ö–æ–¥–∏—Ç—å –≤—Å–µ –Ω–æ–º–µ—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–¥–∞–Ω–æ –æ–¥–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ç–æ—Ä—ã—Ö –¢–∏–º—É—Ä —Å–æ—Ö—Ä–∞–Ω–∏–ª –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ. –í —Å–ª–µ–¥—É—é—â–∏—Ö nn —Å—Ç—Ä–æ–∫–∞—Ö –∑–∞–¥–∞–Ω—ã —Ç–µ–ª–µ—Ñ–æ–Ω—ã –∏ –∏–º–µ–Ω–∞ –∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ mm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç –¢–∏–º—É—Ä–∞. –í —Å–ª–µ–¥—É—é—â–∏—Ö mm —Å—Ç—Ä–æ–∫–∞—Ö –∑–∞–ø–∏—Å–∞–Ω—ã —Å–∞–º–∏ –∑–∞–ø—Ä–æ—Å—ã, –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫–µ. –ö–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å ‚Äî —ç—Ç–æ –∏–º—è –¥—Ä—É–≥–∞, —á—å–∏ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –¢–∏–º—É—Ä —Ö–æ—á–µ—Ç –Ω–∞–π—Ç–∏.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –¢–∏–º—É—Ä–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏–µ —á–µ–ª–æ–≤–µ–∫—É —Å —ç—Ç–∏–º –∏–º–µ–Ω–µ–º (–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞ –∏–º–µ–Ω–∏). –ï—Å–ª–∏ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–π –∫–Ω–∏–≥–µ –Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —á–µ–ª–æ–≤–µ–∫–∞ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º, –≤—ã–≤–µ–¥–∏—Ç–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ ¬´–∞–±–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω¬ª (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫).
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –¢–µ–ª–µ—Ñ–æ–Ω—ã –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤—ã–≤–æ–¥–∏—Ç–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤ —Ç–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∫–∞–∫–æ–º –æ–Ω–∏ –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã –≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –æ—Ç–≤–µ—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ —á–∏—Å–ª—É mm.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –¢–µ–ª–µ—Ñ–æ–Ω ‚Äî —ç—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –ø–æ–¥—Ä—è–¥, –∞ –∏–º—è –º–æ–∂–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±—É–∫–≤ —Ä—É—Å—Å–∫–æ–≥–æ –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞. –ó–∞–ø–∏—Å–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è.
#
# Sample Input:
#
# 3
# 79184219577 –ñ–µ–Ω—è
# 79194249271 –†—É—Å–ª–∞–Ω
# 79281234567 –ñ–µ–Ω—è
# 3
# –†—É—Å–ª–∞–Ω
# –∂–µ–Ω—è
# –†—É—Å—Ç–∞–º
# Sample Output:
#
# 79194249271
# 79184219577 79281234567
# –∞–±–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω

# n = int(input())
# dic = {}
# for _ in range(n):
#         a, b = input().lower().split()
#         dic.setdefault(b, []).append(a)
# m = int(input())
# for j in range(m):
#      word = input().lower()
#      print(*(dic.get(word, {"–∞–±–æ–Ω–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"})))

# ________________________________________________________________________
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —Ç–∞–∫ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result , –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–æ–º –±—É–¥–µ—Ç –ø–æ–∑–∏—Ü–∏—è —á–∏—Å–ª–∞ –≤ —Å–ø–∏—Å–∫–µ numbers (–Ω–∞—á–∏–Ω–∞—è —Å 00), –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äì –µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è result –Ω–µ –Ω—É–∂–Ω–æ.
#
# numbers = [34, 10, -4, 6, 10, 23, -90, 100, 21, -35, -95, 1, 36, -38, -19, 1, 6, 87]
# result = {i: numbers[i]**2 for i in range(len(numbers))}
# print(result)
# _________________________________________________________________________________
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ–≤–∞—Ä—è colors, –∫—Ä–æ–º–µ —Ç–µ—Ö, —É –∫–æ—Ç–æ—Ä—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–µ–º —è–≤–ª—è–µ—Ç—Å—è None.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è result –Ω–µ –Ω—É–∂–Ω–æ.
#
# colors = {'c1': 'Red', 'c2': 'Grey', 'c3': None, 'c4': 'Green', 'c5': 'Yellow', 'c6': 'Pink', 'c7': 'Orange', 'c8': None, 'c9': 'White', 'c10': 'Black', 'c11': 'Violet', 'c12': 'Gold', 'c13': None, 'c14': 'Amber', 'c15': 'Azure', 'c16': 'Beige', 'c17': 'Bronze', 'c18': None, 'c19': 'Lilac', 'c20': 'Pearl', 'c21': None, 'c22': 'Sand', 'c23': None}
#
# result = {key: value for key, value in colors.items() if value != None}
# print(result)
# ____________________________________________________________________________________
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ–≤–∞—Ä—è favorite_numbers , –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è—é—Ç—Å—è –¥–≤—É–∑–Ω–∞—á–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏.
#
#
# favorite_numbers = {'timur': 17, 'ruslan': 7, 'larisa': 19, 'roman': 123, 'rebecca': 293, 'ronald': 76, 'dorothy': 62, 'harold': 36, 'matt': 314, 'kim': 451, 'rosaly': 18, 'rustam': 89, 'soltan': 111, 'amir': 654, 'dima': 390, 'amiran': 777, 'geor': 999, 'sveta': 75, 'rita': 909, 'kirill': 404, 'olga': 271, 'anna': 55, 'madlen': 876}
#
# result = {key: value for key, value in favorite_numbers.items() if 9 < value < 100}
# ________________________________________________________________________________________
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ–≤–∞—Ä—è months , –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∫–ª—é—á –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–º–µ–Ω—è–ª–∏—Å—å –º–µ—Å—Ç–∞–º–∏.

# months = {1: 'January', 2: 'February', 3: 'March', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}
#
# result = {value: key for key, value in months.items()}
# print(result)

# ____________________________________________________________________________________
# –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π s —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –ø–∞—Ä —á–∏—Å–ª–æ:—Å–ª–æ–≤–æ. –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result , –≤ –∫–æ—Ç–æ—Ä–æ–º —á–∏—Å–ª–∞ –±—É–¥—É—Ç –∫–ª—é—á–∞–º–∏, –∞ —Å–ª–æ–≤–∞ ‚Äì –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ö–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ (–∏–º–µ—Ç—å —Ç–∏–ø int), –∑–Ω–∞—á–µ–Ω–∏—è ‚Äì —Å—Ç—Ä–æ–∫–∞–º–∏ (–∏–º–µ—Ç—å —Ç–∏–ø str).



# s = '1:men 2:kind 90:number 0:sun 34:book 56:mountain 87:wood 54:car 3:island 88:power 7:box 17:star 101:ice'
#
# result = {}
# for i in s.split():
#     i = i.split(":")
#     i[0] = int(i[0])
#     result[i[0]] = i[1]
# print(result)
# ___________________
# result = {int(i[0]): i[1] for i in [j.split(':') for j in s.split()]}

# –ò—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result , –≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ numbers, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äì –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π –Ω–∞—á–∏–Ω–∞—è —Å 11.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ –±—ã —Å–ø–∏—Å–æ–∫ numbers –∏–º–µ–ª –≤–∏–¥: numbers = [1, 6, 18], —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –±—ã–ª –±—ã —Å–ª–æ–≤–∞—Ä—å
#
# result = {1: [1], 6: [1, 2, 3, 6], 18: [1, 2, 3, 6, 9, 18]}

# numbers = [34, 10, 4, 6, 10, 23, 90, 100, 21, 35, 95, 1, 36, 38, 19, 1, 6, 87, 1000, 13456, 360]
# result = {}
# n1 = []
# for i in numbers:
#     n2 = []
#     for j in range(1, i+1):
#         if i % j == 0:
#            n2.append(j)
#     n1.append(n2)
# result = dict(zip(numbers, n1))
# print(result)

# _________________________
# numbers = [34, 10, 4, 6, 10, 23, 90, 100, 21, 35, 95, 1, 36, 38, 19, 1, 6, 87, 1000, 13456, 360]
#
# result = {n : [i for i in range(1, n + 1) if n % i == 0] for n in numbers}
# _________________________________________________________________________________________________
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result , –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–æ–º –±—É–¥–µ—Ç —Å—Ç—Ä–æ–∫–∞ ‚Äì —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ words, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äì —Å–ø–∏—Å–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–¥–æ–≤ ASCII —Å–∏–º–≤–æ–ª–æ–≤ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ï—Å–ª–∏ –±—ã —Å–ø–∏—Å–æ–∫ words –∏–º–µ–ª –≤–∏–¥: words = ['yes', 'hello'], —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –±—ã–ª –±—ã —Å–ª–æ–≤–∞—Ä—å
#
# result = {'yes': [121, 101, 115], 'hello': [104, 101, 108, 108, 111]}
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ASCII –∫–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é ord().

# words = ['hello', 'bye', 'yes', 'no', 'python', 'apple', 'maybe', 'stepik', 'beegeek']
#
# result = {key: [ord(value) for value in key] for key in words}
# print(result)
#
# ___________________
# words = ['hello', 'bye', 'yes', 'no', 'python', 'apple', 'maybe', 'stepik', 'beegeek']
#
# result = {el: list(map(ord, el)) for el in words}
#----------------------------------------------------------------------------------------
#–î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ–≤–∞—Ä—è letters , –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–µ—Ö, –∫–ª—é—á–∏ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ remove_keys.
# letters = {0: 'A', 1: 'B', 2: 'C', 3: 'D', 4: 'E', 5: 'F', 6: 'G', 7: 'H', 8: 'I', 9: 'J', 10: 'K', 11: 'L', 12: 'M', 13: 'N', 14: 'O', 15: 'P', 16: 'Q', 17: 'R', 18: 'S', 19: 'T', 20: 'U', 21: 'V', 22: 'W', 23: 'X', 24: 'Y', 26: 'Z'}
#
# remove_keys = [1, 5, 7, 12, 17, 19, 21, 24]
#
# result = {}
#
# result = {k: letters[k] for k in letters if k not in remove_keys}
#
# print(result)
#
# __________________
# result = {k: letters[k] for k in set(letters) - set(remove_keys)}
# ______________________________________________________________________________________
# –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π students —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ—Å—Ç–µ (–≤ —Å–º) –∏ –≤–µ—Å–µ (–≤ –∫–≥) —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
#
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ–≤–∞—Ä—è students , –≥–¥–µ —É–∫–∞–∑–∞–Ω —Ä–æ—Å—Ç –±–æ–ª—å—à–µ 167167 —Å–º, –∞ –≤–µ—Å –º–µ–Ω—å—à–µ 7575 –∫–≥.

# students = {'Timur': (170, 75), 'Ruslan': (180, 105), 'Soltan': (192, 68), 'Roman': (175, 70), 'Madlen': (160, 50), 'Stefani': (165, 70), 'Tom': (190, 90), 'Jerry': (180, 87), 'Anna': (172, 67), 'Scott': (168, 78), 'John': (186, 79), 'Alex': (195, 120), 'Max': (200, 110), 'Barak': (180, 89), 'Donald': (170, 80), 'Rustam': (186, 100), 'Alice': (159, 59), 'Rita': (170, 80), 'Mary': (175, 69), 'Jane': (190, 80)}
#
# result = {k: v for k, v in students.items() if v[0] > 167 and v[1] < 75}
# print(result)
# __________________
#
# result = {k: students[k] for k in students if students[k][0] > 167 and students[k][1] < 75}
# ___________________________________________________________________________________

# –°–ø–∏—Å–æ–∫ tuples —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ç–µ–∂–∏, —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ —Ç—Ä–µ—Ö —á–∏—Å–µ–ª.
#
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å result, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–æ–º —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–∞–∂–¥–æ–≥–æ –∫–æ—Ä—Ç–µ–∂–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äì –∫–æ—Ä—Ç–µ–∂ –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

# tuples = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12), (13, 14, 15), (16, 17, 18), (19, 20, 21), (22, 23, 24), (25, 26, 27), (28, 29, 30), (31, 32, 33), (34, 35, 36)]
#
# result = {}
# for i in tuples:
#      for j in i:
#           result[i[0]] = tuple(i[1:])
# print(result)
# __________________________
# result = {i[0]: i[1:] for i in tuples}
# ________________________
# result = {i: (*j,) for i, *j in tuples}
# _______________________________________________________________________________________________

# –î–∞–Ω—ã —Ç—Ä–∏ —Å–ø–∏—Å–∫–∞ student_ids, student_names, student_grades, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—É–¥–µ–Ω—Ç–∞—Ö.
#
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —Ç–∞–∫ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ result, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –æ–±—Ä–∞–∑—Ü–æ–º: [{'S001': {'Camila Rodriguez': 86}}, {'S002': {'Juan Cruz': 98}},...].
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–æ –≤—Å–µ–º —Ç—Ä–µ–º —Å–ø–∏—Å–∫–∞–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é zip().

# student_ids = ['S001', 'S002', 'S003', 'S004', 'S005', 'S006', 'S007', 'S008', 'S009', 'S010', 'S011', 'S012', 'S013']
# student_names = ['Camila Rodriguez', 'Juan Cruz', 'Dan Richards', 'Sam Boyle', 'Batista Cesare', 'Francesco Totti', 'Khalid Hussain', 'Ethan Hawke', 'David Bowman', 'James Milner', 'Michael Owen', 'Gary Oldman', 'Tom Hardy']
# student_grades = [86, 98, 89, 92, 45, 67, 89, 90, 100, 98, 10, 96, 93]
#
# result1 = {dict(zip(student_names, student_grades))}
# # result = [dict(zip(student_ids, result1))]
# print(result1)
# __________________________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç –±—Ä–æ—Å–∫–∏ –º–æ–Ω–µ—Ç—ã. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—Ä–æ—Å–∫–æ–≤: –û—Ä–µ–ª –∏–ª–∏ –†–µ—à–∫–∞ (–∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ).
# import random
#
# n = int(input())
# for i in range(n):
#     a = random.randint(0, 1)
#     if a == 0:
#         print('–û—Ä–µ–ª')
#     if a == 1:
#         print('–†–µ—à–∫–∞')
# _____________
# import random
#
# n = int(input())    # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
# for _ in range(n):
#     print(random.choice(['–û—Ä–µ–ª', '–†–µ—à–∫–∞']))
# ______________
# import random
#
# n = int(input())
# for _ in range(n):
#     print('–û—Ä–µ–ª' if random.randrange(2) else '–†–µ—à–∫–∞')

# _________________________________________________________________________________

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –º–æ–¥–µ–ª–∏—Ä—É–µ—Ç –±—Ä–æ—Å–∫–∏ –∏–≥—Ä–∞–ª—å–Ω–æ–≥–æ –∫—É–±–∏–∫–∞ c 66 –≥—Ä–∞–Ω—è–º–∏. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—Ä–æ—Å–∫–æ–≤ ‚Äî –≤—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ –≥—Ä–∞–Ω–∏ –∫—É–±–∏–∫–∞ (–∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ).
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ n=7  n=7 –≤–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å:
#
# 5
# 5
# 6
# 6
# 2
# 6
# 2
#
# import random
#
# n = int(input())    # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
# for i in range(n):
#     print(random.randint(1,6))
# ______________
#
# import random
# print(*[random.randint(1, 6) for _ in range(int(input()))], sep='\n')
#
# ____________________________________________________________________
#
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ç–æ–ª—å–∫–æ —Å–∏–º–≤–æ–ª—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ a..z, A..Z (–≤ –Ω–∏–∂–Ω–µ–º –∏ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ).
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°–∏–º–≤–æ–ª–∞–º A..Z –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞ —Å 6565 –ø–æ 9090 –≤ —Ç–∞–±–ª–∏—Ü–µ —Å–∏–º–≤–æ–ª–æ–≤ ASCII.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–∏–º–≤–æ–ª–∞–º a..z –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ–º–µ—Ä–∞ —Å 9797 –ø–æ 122122 –≤ —Ç–∞–±–ª–∏—Ü–µ —Å–∏–º–≤–æ–ª–æ–≤ ASCII.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é chr() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞ –ø–æ –µ–≥–æ –Ω–æ–º–µ—Ä—É –≤ —Ç–∞–±–ª–∏—Ü–µ —Å–∏–º–≤–æ–ª–æ–≤ ASCII.
#
#  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –¥–ª–∏–Ω–µ –ø–∞—Ä–æ–ª—è, —Ä–∞–≤–Ω–æ–π 1515 —Å–∏–º–≤–æ–ª–∞–º –≤–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –º–æ–∂–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å:
#
# peJFAmhqfaAeKDu
#
# import random
# chars = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
# password = ''
# for i in range(int(input())):
#     n = random.choice(chars)
#     password +=n
# print(password)
#
# ____________________________
#
# import random
#
# length = int(input())    # –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
# password = ''
# for i in range(length):
#     password += [chr(random.randint(65, 90)), chr(random.randint(97, 122))][random.randint(0, 1)]
# print(password)
# ______________
# import random
#
# length = int(input())    # –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
# password = ''
# for i in range(length):
#     password += [chr(random.randint(65, 90)), chr(random.randint(97, 122))][random.randint(0, 1)]
# print(password)
# _________________
# from random import *
#
# for _ in range(int(input())):
#     print(chr(choice([randint(65, 90), randint(97, 122)])), end='')
# ___________________
#
# –õ–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç 77 —á–∏—Å–µ–ª –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç 11 –¥–æ 4949 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).
#
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 77 —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª –¥–ª—è –ª–æ—Ç–µ—Ä–µ–π–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —á–∏—Å–ª–∞ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —á–µ—Ä–µ–∑ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª–∞.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤.

# import random
# password = []
# for i in range(7):
#     n= random.randint(1, 49)
#     password.append(n)
# print(*sorted(password))

# _______________________________________________
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –≤ —Å–ø–∏—Å–∫–∞—Ö –∑–Ω–∞—á–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ–≤–∞—Ä—è my_dict  –Ω–µ –±—ã–ª–æ —á–∏—Å–µ–ª, –±–æ–ª—å—à–∏—Ö 2020. –ü—Ä–∏ —ç—Ç–æ–º –ø–æ—Ä—è–¥–æ–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—è—Ç—å—Å—è –Ω–µ –¥–æ–ª–∂–µ–Ω.

# my_dict = {'C1': [10, 20, 30, 7, 6, 23, 90], 'C2': [20, 30, 40, 1, 2, 3, 90, 12], 'C3': [12, 34, 20, 21], 'C4': [22, 54, 209, 21, 7], 'C5': [2, 4, 29, 21, 19], 'C6': [4, 6, 7, 10, 55], 'C7': [4, 8, 12, 23, 42], 'C8': [3, 14, 15, 26, 48], 'C9': [2, 7, 18, 28, 18, 28]}
# my_dict = {k: [j for j in v if int(j) <= 20] for k, v in my_dict.items()}
# print(my_dict)
# ____________________________________________________
# –°–ª–æ–≤–∞—Ä—å emails —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –¥–æ–º–µ–Ω—É. –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –≤—Å–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ username@domain.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é sorted(), –ª–∏–±–æ —Å–ø–∏—Å–æ—á–Ω—ã–π –º–µ—Ç–æ–¥ sort().
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–æ –¥–æ–º–µ–Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ.

#
# emails = {'nosu.edu': ['timyr', 'joseph', 'svetlana.gaeva', 'larisa.mamuk'],
#           'gmail.com': ['ruslan.chaika', 'rustam.mini', 'stepik-best'],
#           'msu.edu': ['apple.fruit', 'beegeek', 'beegeek.school'],
#           'yandex.ru': ['surface', 'google'],
#           'hse.edu': ['tomas-henders', 'cream.soda', 'zivert'],
#           'mail.ru': ['angel.down', 'joanne', 'the.fame.moster']}
#
# mail_list = []
# for k,v in emails.items():
#     for i in v:
#         mail = i + '@' + k
#         mail_list.append(mail)
# print(*(sorted(mail_list)), sep="\n")

# –ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ –∏–∑ –∫—É—Ä—Å–∞ –±–∏–æ–ª–æ–≥–∏–∏ –î–ù–ö –∏ –†–ù–ö ‚Äì –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–æ–≤.
#
# –ß–µ—Ç—ã—Ä–µ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–∞ –≤ –î–ù–ö:
#
# –∞–¥–µ–Ω–∏–Ω (A);
# —Ü–∏—Ç–æ–∑–∏–Ω (C);
# –≥—É–∞–Ω–∏–Ω (G);
# —Ç–∏–º–∏–Ω (T).
# –ß–µ—Ç—ã—Ä–µ –Ω—É–∫–ª–µ–æ—Ç–∏–¥–∞ –≤ –†–ù–ö:
#
# –∞–¥–µ–Ω–∏–Ω (A);
# —Ü–∏—Ç–æ–∑–∏–Ω (C);
# –≥—É–∞–Ω–∏–Ω (G);
# —É—Ä–∞—Ü–∏–ª (U).
# –¶–µ–ø—å –†–ù–ö —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–µ–ø–∏ –î–ù–ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –∫–æ–º–ø–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö –Ω—É–∫–ª–µ–æ—Ç–∏–¥–æ–≤:
#
# G \rightarrow‚Üí C;
# C \rightarrow‚Üí G;
# T \rightarrow‚Üí A;
# A \rightarrow‚Üí U.
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –ø–µ—Ä–µ–≤–æ–¥—è—â—É—é —Ü–µ–ø—å –î–ù–ö –≤ —Ü–µ–ø—å –†–ù–ö.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–ø—å –î–ù–ö –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ü–µ–ø—å –†–ù–ö –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.

#
# dik = {'A': 'U', 'C': 'G', 'G': 'C', 'T': 'A'}
# rnk = ''
# for i in input():
#     rnk += dik[i]
# print(rnk)
# __________
# d = str.maketrans({'A': 'U', 'C': 'G', 'G': 'C', 'T': 'A'})
# s = input()
# print(s.translate(d))
# ________________________________________________________________________________
# –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —Å–ª–æ–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–±–µ–ª–∞. –°–ª–æ–≤–æ–º —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤, —Å–ª–æ–≤–∞ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏.
#
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –æ–ø—Ä–µ–¥–µ–ª—è—é—â—É—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ–π —Ñ–æ—Ä–º–µ, —Å —É—á–µ—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞. –î–ª—è –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å–ª–æ–≤–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–µ–¥–µ—Ç 11, –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–æ–≥–æ –∂–µ —Å–ª–æ–≤–∞ ‚Äî 22 –∏ —Ç. –¥.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Ç–µ–∫—Å—Ç–∞, —Å–æ—Å—Ç–æ—è—â—É—é —Ç–æ–ª—å–∫–æ –∏–∑ —Ä—É—Å—Å–∫–∏—Ö –±—É–∫–≤ –∏ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–æ–±–µ–ª–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–≤–æ–¥–∏—Ç –æ–¥–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚Äî –Ω–æ–º–µ—Ä –≤—Ö–æ–∂–¥–µ–Ω–∏—è —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —Ç–µ–∫—Å—Ç. –ß–∏—Å–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–æ–¥—è—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–ª–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
#
# Sample Input 1:
#
# –ø—Ä–∏–µ–º –•—å—é—Å—Ç–æ–Ω –•—å—é—Å—Ç–æ–Ω –∫–∞–∫ —Å–ª—ã—à–Ω–æ –ø—Ä–∏–µ–º –º–µ–Ω—è —Å–ª—ã—à–Ω–æ –ø—Ä–∏–µ–º —Ö—å—é—Å—Ç–æ–Ω
# Sample Output 1:
#
# 1 1 2 1 1 2 1 2 3 1

# numbers = input().split()
# result = {}
# s = []
# for num in numbers:
#     result[num] = result.get(num, 0) + 1
#     l = result.get(num, 0) + 1
#     s.append(int(l)-1)
# print(*s)
# ______________________________
# s = input().split()
# d = {}
# for i in s:
#     d[i] = d.get(i, 0) + 1
#     print(d[i], end = ' ')


# –í –∏–≥—Ä–µ Scrabble –∫–∞–∂–¥–∞—è –±—É–∫–≤–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤. –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–æ–≤–∞ ‚Äì —Å—É–º–º–∞ –±–∞–ª–ª–æ–≤ –µ–≥–æ –±—É–∫–≤. –ß–µ–º —Ä–µ–∂–µ –±—É–∫–≤–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è, —Ç–µ–º –±–æ–ª—å—à–µ –æ–Ω–∞ —Ü–µ–Ω–∏—Ç—Å—è:
#
# –ë–∞–ª–ª—ã	–ë—É–∫–≤–∞
# 11	AA, EE, II, LL, NN, OO, RR, SS, TT, UU
# 22	DD, GG
# 33	BB, CC, MM, PP
# 44	FF, HH, VV, WW, YY
# 55	KK
# 88	JJ, XX
# 1010	QQ, ZZ
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–¥—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –æ–¥–Ω–æ —Å–ª–æ–≤–æ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å—É–º–º–∞—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –±—É–∫–≤ –≤–≤–µ–¥–µ–Ω–æ–≥–æ —Å–ª–æ–≤–∞.


# dic = {'A': 1, 'E': 1, 'I': 1, 'L': 1, 'N': 1, 'O': 1, 'R': 1, 'S': 1, 'T': 1, 'U': 1, 'D': 2, 'G': 2, 'B': 3, 'C': 3, 'M': 3, 'P': 3, 'F': 4, 'H': 4, 'V': 4, 'W': 4, 'Y': 4, 'K': 5, 'J': 8, 'X': 8, 'Q': 10, 'Z': 10}
# count = 0
# for i in input():
#     count += dic[i]
# print(count)
# _______________
# print(sum(val for s in input() for key, val in {'AEILNORSTU': 1, 'DG': 2, 'BCMP': 3, 'FHVWY': 4, 'K': 5, 'JX': 8, 'QZ': 10}.items() if s in key))
# _____________________________________________________________________
# –í —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞ –Ω–∞—à–∞ ‚ù§Ô∏è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ Stepik, –ø—Ä–æ–Ω–∏–∫ –æ–ø–∞—Å–Ω—ã–π –≤–∏—Ä—É—Å –∏ —Å–ª–æ–º–∞–ª –∫–æ–Ω—Ç—Ä–æ–ª—å –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º. –ì–æ–≤–æ—Ä—è—Ç, –≤–∏—Ä—É—Å –Ω–∞–ø–∏—Å–∞–ª –æ–¥–∏–Ω –∏–∑ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∫—É—Ä—Å–∞ Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.
#
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑–≤–µ—Å—Ç–Ω–æ, —Å –∫–∞–∫–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –º–æ–∂–Ω–æ –∫ –Ω–µ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è:
#
# –∑–∞–ø–∏—Å—å W (write, –¥–æ—Å—Ç—É–ø –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª);
# —á—Ç–µ–Ω–∏–µ R (read, –¥–æ—Å—Ç—É–ø –Ω–∞ —á—Ç–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞);
# –∑–∞–ø—É—Å–∫ X (execute, –∑–∞–ø—É—Å–∫ –Ω–∞ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞).
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º. –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–æ–ª–∂–Ω–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å OK –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –∏ Access denied, –µ—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ nn, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö—Å—è –≤ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞. –î–∞–ª–µ–µ –∏–¥–µ—Ç nn —Å—Ç—Ä–æ–∫, –Ω–∞ –∫–∞–∂–¥–æ–π –∏–º—è —Ñ–∞–π–ª–∞ –∏ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å –Ω–∏–º –æ–ø–µ—Ä–∞—Ü–∏–∏, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞. –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ —á–∏—Å–ª–æ mm ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ —Ñ–∞–π–ª–∞–º, –∏ –∑–∞—Ç–µ–º mm —Å—Ç—Ä–æ–∫ —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤–∏–¥–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª. –û–¥–Ω–æ–º—É –∏ —Ç–æ–º—É –∂–µ —Ñ–∞–π–ª—É –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–¥—Ä–µ—Å–æ–≤–∞–Ω–æ –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ mm –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ Access denied –∏–ª–∏ OK.

# dic = {'write': 'W', 'read': 'R', 'execute': 'X'}
# n = int(input())
# words = {}
# for i in range(n):
#     a, * b = input().split()
#     words[a] = b
# # print(words)
# n2 = int(input())
# for i in range(n2):
#     b2, a2 = input().split()
#     if dic[b2] in words[a2]:
#        print("OK")
#     else:
#        print("Access denied")
# _______________________
# r = {}
# z = {'W': 'write', 'R': 'read', 'X': 'execute'}
# for i in range(int(input())):
#     x = input().split()
#     r[x[0]] = [z[i] for i in x[1:]]
# for i in range(int(input())):
#     a, b = input().split()
#     print(('Access denied', 'OK')[a in r[b]])
# _________________________________________________________________________________
#
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –µ–¥–∏–Ω–∏—Ü –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã—Ö –∫–∞–∂–¥—ã–º –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ nn ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞. –î–∞–ª–µ–µ —Å–ª–µ–¥—É–µ—Ç nn —Å—Ç—Ä–æ–∫ —Å –∑–∞–ø–∏—Å—è–º–∏ –≤–∏–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å —Ç–æ–≤–∞—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –≥–¥–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å ‚Äî –∏–º—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è (—Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤), —Ç–æ–≤–∞—Ä ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (—Å—Ç—Ä–æ–∫–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤), –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü —Ç–æ–≤–∞—Ä–∞ (–Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ).
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –ø–æ—Å–ª–µ –∏–º–µ–Ω–∏ –∫–∞–∂–¥–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è ‚Äî –¥–≤–æ–µ—Ç–æ—á–∏–µ, –∑–∞—Ç–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –≤—Å–µ—Ö –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã—Ö –∏–º —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ, –ø–æ—Å–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü —Ç–æ–≤–∞—Ä–∞. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–∂–¥–æ–º —Ç–æ–≤–∞—Ä–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.


n = int(input())
dic = {}
dic2 = {}
for i in range(n):
    a, b, c = input().split()
    # print(a,c,b)
    # dic2[b] = c
    # dic[a] = {b: c}


    dic.setdefault(a,[]).append({b: c})
# print(dic)
for i in dic:
    print(i, "EQUAL:", dic[i])
    for x in dic[i]:
        quantity = int(list(x.values())[0])
        item = list(x.keys())[0]
        print(x.get(item))
        print(dic.get(i))

        # dic.get(b).update(a)
        # print("adet", a)
        # print("urun", b)
        # print("kac adet", x.get(b))


