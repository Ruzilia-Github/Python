# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ), —á–µ–π –Ω–æ–º–µ—Ä –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 88.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ò–º–µ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ä–∞–∑–¥–µ–ª—è—è —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.


#
# users = [{'name': 'Todd', 'phone': '551-1414', 'email': 'todd@gmail.com'},
#          {'name': 'Helga', 'phone': '555-1618', 'email': 'helga@mail.net'},
#          {'name': 'Olivia', 'phone': '449-3141', 'email': ''},
#          {'name': 'LJ', 'phone': '555-2718', 'email': 'lj@gmail.net'},
#          {'name': 'Ruslan', 'phone': '422-145-9098', 'email': 'rus-lan.cha@yandex.ru'},
#          {'name': 'John', 'phone': '233-421-32', 'email': ''},
#          {'name': 'Lara', 'phone': '+7998-676-2532', 'email': 'g.lara89@gmail.com'},
#          {'name': 'Alina', 'phone': '+7948-799-2434', 'email': 'ali.ch.b@gmail.com'},
#          {'name': 'Robert', 'phone': '420-2011', 'email': ''},
#          {'name': 'Riyad', 'phone': '128-8890-128', 'email': 'r.mahrez@mail.net'},
#          {'name': 'Khabib', 'phone': '+7995-600-9080', 'email': 'kh.nurmag@gmail.com'},
#          {'name': 'Olga', 'phone': '6449-314-1213', 'email': ''},
#          {'name': 'Roman', 'phone': '+7459-145-8059', 'email': 'roma988@mail.ru'},
#          {'name': 'Maria', 'phone': '12-129-3148', 'email': 'm.sharapova@gmail.com'},
#          {'name': 'Fedor', 'phone': '+7445-341-0545', 'email': ''},
#          {'name': 'Tim', 'phone': '242-449-3141', 'email': 'timm.ggg@yandex.ru'}]
# a = []
# for key in users:
#     if key["phone"][-1] == "8":
#         a.append(key["name"])
# print(*(sorted(a)))
# ______________________________________________________________
#
# print(*sorted([x['name'] for x in users if x['phone'][-1] == '8']))


# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –∏–º–µ–Ω–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ), —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ö–ª—é—á email –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ò–º–µ–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, —Ä–∞–∑–¥–µ–ª—è—è —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.


# /
# __________________________________________________________________________
# # list=[]
# for i in users:
#     if i.get("email")==None or len(i.get("email")) == 0:
#         list.append(i.get("name"))
#
# print(list)
# _______________________________________________________________
# a = []
# for key in users:
#     try:
#         if len(key['email']) == 0:
#             a.append(key["name"])
#     except:
#         if "email" not in users:
#             a.append(key["name"])
#
# print(*(sorted(a)))
# _______________________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É, –∑–∞–º–µ–Ω—è—è –≤—Å–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∏—Å–ª–µ –Ω–∞ —Å–ª–æ–≤–∞:
#
# 00 –Ω–∞ zero;
# 11 –Ω–∞ one;
# 22 –Ω–∞ two;
# 33 –Ω–∞ three;
# 44 –Ω–∞ four;
# 55 –Ω–∞ five;
# 66 –Ω–∞ six;
# 77 –Ω–∞ seven;
# 88 –Ω–∞ eight;
# 99 –Ω–∞ nine.
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å –≤–º–µ—Å—Ç–æ —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.


# my_dict = {'0': 'zero', '1': 'one', '2': 'two', '3': 'three', '4': 'four', '5': 'five', '6': 'six', '7': 'seven', '8': 'eight', '9': 'nine'}
# n= input()
# a = []
# for key in n:
#     a.append(my_dict[key])
# print(*a)
# _______________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ –Ω–æ–º–µ—Ä—É –∫—É—Ä—Å–∞ –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω–æ–º –∫—É—Ä—Å–µ.
#
# –ù–æ–º–µ—Ä –∫—É—Ä—Å–∞ (–∫–ª—é—á)	–ù–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (–∑–Ω–∞—á–µ–Ω–∏–µ)	–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å (–∑–Ω–∞—á–µ–Ω–∏–µ)	–í—Ä–µ–º—è (–∑–Ω–∞—á–µ–Ω–∏–µ)
# CS101	3004	–•–∞–π–Ω—Å	8:00
# CS102	4501	–ê–ª—å–≤–∞—Ä–∞–¥–æ	9:00
# CS103	6755	–†–∏—á	10:00
# NT110	1244	–ë–µ—Ä–∫	11:00
# CM241	1411	–õ–∏	13:00
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äì –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –∫—É—Ä—Å–∞, –∑–∞—Ç–µ–º –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å –≤–º–µ—Å—Ç–æ —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –î–ª—è —É–¥–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ format() –∏–ª–∏ f-—Å—Ç—Ä–æ–∫–∏.
#
# Sample Input 1:
#
# CS101
# Sample Output 1:
#
# CS101: 3004, –•–∞–π–Ω—Å, 8:00


# d = {
#     "CS101": "CS101: 3004, –•–∞–π–Ω—Å, 8:00",
#     "CS102": "CS102: 4501, –ê–ª—å–≤–∞—Ä–∞–¥–æ, 9:00",
#     "CS103": "CS103: 6755, –†–∏—á, 10:00",
#     "NT110": "NT110: 1244, –ë–µ—Ä–∫, 11:00",
#     "CM241": "CM241: 1411, –õ–∏, 13:00"
# }
#
#
# print(f"{d[input()]}")
#
# ____________
#
# d = {
#     "CS101": "3004, –•–∞–π–Ω—Å, 8:00",
#     "CS102": "4501, –ê–ª—å–≤–∞—Ä–∞–¥–æ, 9:00",
#     "CS103": "6755, –†–∏—á, 10:00",
#     "NT110": "1244, –ë–µ—Ä–∫, 11:00",
#     "CM241": "1411, –õ–∏, 13:00"
# }
# s = input()
# print(f'{s}: {d[s]}')
# ____________________________________________________________________________
# –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ—á–Ω—ã—Ö —Ç–µ–ª–µ—Ñ–æ–Ω–∞—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å –ø–æ–º–æ—â—å—é —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã. –ü–æ—Å–∫–æ–ª—å–∫—É —Å –∫–∞–∂–¥–æ–π –∫–ª–∞–≤–∏—à–µ–π —Å–≤—è–∑–∞–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±—É–∫–≤, –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –±—É–∫–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à. –ü—Ä–∏ –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–º –Ω–∞–∂–∞—Ç–∏–∏ —Ü–∏—Ñ—Ä—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª, —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–ª—è —ç—Ç–æ–π –∫–ª–∞–≤–∏—à–∏. –ù–∞–∂–∞—Ç–∏–µ —Ü–∏—Ñ—Ä—ã 2, 3, 42,3,4 –∏–ª–∏ 55 —Ä–∞–∑ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Ç–æ—Ä–æ–π, —Ç—Ä–µ—Ç–∏–π, —á–µ—Ç–≤–µ—Ä—Ç—ã–π –∏–ª–∏ –ø—è—Ç—ã–π —Å–∏–º–≤–æ–ª –∫–ª–∞–≤–∏—à–∏.
#
# 1	.,?!:
# 2	ABC
# 3	DEF
# 4	GHI
# 5	JKL
# 6	MNO
# 7	PQRS
# 8	TUV
# 9	WXYZ
# 0	space (–ø—Ä–æ–±–µ–ª)
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äì —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–æ–ø–∏—Å–Ω—ã–µ, —Ç–∞–∫ –∏ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª—é–±—ã–µ —Å–∏–º–≤–æ–ª—ã, –Ω–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–π –≤—ã—à–µ —Ç–∞–±–ª–∏—Ü–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. Nokia 3310, —á—Ç–æ–±—ã –≤—Å–ø–æ–º–Ω–∏—Ç—å –∫–∞–∫ —ç—Ç–æ –±—ã–ª–æ üòÑ
#
#
#
# –ü–æ–¥—Å–∫–∞–∑–∫–∞
# –°–æ–∑–¥–∞–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥–∞—è –±—É–∫–≤–∞ –∏–ª–∏ —Å–∏–º–≤–æ–ª —Å–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å –Ω–∞–∂–∞—Ç–∏—è–º–∏ –∫–ª–∞–≤–∏—à, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –¥–ª—è –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è.
#
# Sample Input 1:
#
# Hello, World!
# Sample Output 1:
#
# 4433555555666110966677755531111
#
# d={".":'1', ",":'11', "?":'111', "!":'1111', ":":'11111',
#     "A":'2', "B":'22', "C":'222',
#     "D":'3', "E":'33', "F":'333',
#     "G":'4', "H":'44', "I":'444',
#     "J":'5', "K":'55', "L":'555',
#     "M":'6', "N":'66', "O":'666',
#     "P":'7', "Q":'77', "R":'777', "S": '7777',
#     "T":'8', "U":'88', "V":'888',
#     "W":'9', "X":'99', "Y":'999', "Z": '9999',
#     " ":'0'
# }
#
# a = ''
# for key in input().upper():
#     try:
#         a += d[key]
#     except:
#         if key not in d:
#             continue
#
# print(a)
#
# ________________________________________________________________________
#
# letters = [c for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789']
# morse = ['.-', '-...', '-.-.', '-..', '.', '..-.', '--.', '....', '..', '.---', '-.-', '.-..', '--', '-.', '---', '.--.', '--.-', '.-.', '...', '-', '..-', '...-', '.--', '-..-', '-.--', '--..', '-----', '.----', '..---', '...--', '....-', '.....', '-....', '--...', '---..', '----.']
# d = dict(zip(letters, morse))
# a = ''
# for key in input().upper():
#     try:
#         a += d[key] + " "
#     except:
#         if key not in d:
#             continue
#
# print(a)


#
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result —Ö—Ä–∞–Ω–∏–ª—Å—è —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ ‚Äì —á–∏—Å–ª–∞ –æ—Ç 11 –¥–æ 1515 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ), –∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –∫–≤–∞–¥—Ä–∞—Ç—ã –∫–ª—é—á–µ–π.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è result –Ω–µ –Ω—É–∂–Ω–æ.

# n = [i for i in range(1,16)]
# n2 = [i**2 for i in range(1,16)]
# d = dict(zip(n, n2))
# print(d)
# _____________
#
# result = {i: i**2 for i in range(1, 16)}
# print(result)
# ______________
# result = {}
# for i in range(1, 16):
#     result.setdefault(i, i**2)
# ____________________________________________________________________________

# dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
# dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
# # result = dict1 | dict2
# dict1.update(dict2)
# result = dict1
# dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
# dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
# for i in result:
#     try:
#       if i in dict1:
#           result[i] = dict1[i] + dict2[i]
#     except:
#         result[i]=result[i]
# print(result)

# _____________________

# dict1 = {'a': 100, 'z': 333, 'b': 200, 'c': 300, 'd': 45, 'e': 98, 't': 76, 'q': 34, 'f': 90, 'm': 230}
# dict2 = {'a': 300, 'b': 200, 'd': 400, 't': 777, 'c': 12, 'p': 123, 'w': 111, 'z': 666}
#
# result = {i: dict1.get(i, 0) + dict2.get(i, 0) for i in set(dict1.keys() | dict2.keys())}

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result —Ö—Ä–∞–Ω–∏–ª—Å—è —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å—Ç—Ä–æ–∫–∏ text –±—É–¥–µ—Ç –ø–æ–¥—Å—á–∏—Ç–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –í—ã–≤–æ–¥–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–æ–≤–∞—Ä—è result –Ω–µ –Ω—É–∂–Ω–æ.

# text = 'footballcyberpunkextraterritorialityconversationalistblockophthalmoscopicinterdependencemamauserfff'
# result = {}
# for num in text:
#     result[num] = result.get(num, 0) + 1
# print(result)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–π –∫–æ–¥, —á—Ç–æ–±—ã –æ–Ω –≤—ã–≤–µ–ª –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—â–µ–µ—Å—è —Å–ª–æ–≤–æ —Å—Ç—Ä–æ–∫–∏ s. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–≤–µ–¥–µ–Ω–æ —Ç–æ, —á—Ç–æ –º–µ–Ω—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ.

import collections
s = 'orange strawberry barley gooseberry apple apricot barley currant orange melon pomegranate banana banana orange barley apricot plum grapefruit banana quince strawberry barley grapefruit banana grapes melon strawberry apricot currant currant gooseberry raspberry apricot currant orange lime quince grapefruit barley banana melon pomegranate barley banana orange barley apricot plum banana quince lime grapefruit strawberry gooseberry apple barley apricot currant orange melon pomegranate banana banana orange apricot barley plum banana grapefruit banana quince currant orange melon pomegranate barley plum banana quince barley lime grapefruit pomegranate barley'

# n = [i for i in s.split()]
# result={}
# for j in n:
#     result[j] = result.get(j, 0)+1
# # print(result)
# # print(max(result.values()))
# a = []
# for z in result:
#     try:
#         if result[z] == max(result.values()):
#             a.append(z)
#     except:
#         continue
# print(a[0])
#
# pets = [('Hatiko', 'Parker', 'Wilson', 50),
#         ('Rusty', 'Josh', 'King', 25),
#         ('Fido', 'John', 'Smith', 28),
#         ('Butch', 'Jake', 'Smirnoff', 18),
#         ('Odi', 'Emma', 'Wright', 18),
#         ('Balto', 'Josh', 'King', 25),
#         ('Barry', 'Josh', 'King', 25),
#         ('Snape', 'Hannah', 'Taylor', 40),
#         ('Horry', 'Martha', 'Robinson', 73),
#         ('Giro', 'Alex', 'Martinez', 65),
#         ('Zooma', 'Simon', 'Nevel', 32),
#         ('Lassie', 'Josh', 'King', 25),
#         ('Chase', 'Martha', 'Robinson', 73),
#         ('Ace', 'Martha', 'Williams', 38),
#         ('Rocky', 'Simon', 'Nevel', 32)]
#
# list = []
# dog_owner = {}
# from pprint import pprint
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
#
# pprint(dog_owner)
#
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
# result=dog_owner
# ____________________________________________________________________________________________
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ä–µ–∂–µ –≤—Å–µ–≥–æ, –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞. –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –≤—ã–≤–µ–¥–∏—Ç–µ —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–µ–Ω—å—à–µ –≤ –ª–µ–∫—Å–∏–∫–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ (–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ), –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ–µ —Ä–µ–∂–µ –≤—Å–µ–≥–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–π –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É, —Å–ª–æ–≤–∞ apple –∏ Apple –¥–æ–ª–∂–Ω–∞ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –°–ª–æ–≤–æ ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—É–∫–≤. –ö—Ä–æ–º–µ —Å–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ –º–æ–≥—É—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è .,!?:;-, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å. –î—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç.
#
# Sample Input 1:
#
# home sweet home
# Sample Output 1:
#
# sweet
#
#
#
# import re
# n = input().lower().split()
# a = []
# for i in n:
#     words = re.sub(r'[.,;:-?-!]', '', i)
#     a.append(words)
# result = {}
# for num in a:
#     result[num] = result.get(num, 0) + 1
# lst = [(value, key) for key, value in result.items()]
# lst.sort()
# print(lst[0][1])

# ______________________
# dct = {}
# lst = [word.strip('.,!?:;-') for word in input().lower().split()]
# for word in lst:
#     dct[word] = dct.get(word, 0) + 1
# lst = [(value, key) for key, value in dct.items()]
# print(lst)
# lst.sort()
# print(lst[0][1])
# _______________________________________________________________________________________________
#
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å—Ç—Ä–æ–∫–∏-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö —Ç–∞–∫, —á—Ç–æ–±—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –Ω–µ –±—ã–ª–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–±–∞–≤–ª—è—Ç—å –∫ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞–º –ø–æ—Å—Ç—Ñ–∏–∫—Å _n, –≥–¥–µ n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, —Å–∫–æ–ª—å–∫–æ —Ç–∞–∫–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å—Ç—Ä–æ–∫–∏-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É, –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—â—É—é –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫.
#
# Sample Input 1:
#
# a b c a a d c
# Sample Output 1:
#
# a b c a_1 a_2 d c_1

# a=input().split()
# for i in range(len(a)):
#     if a[i] not in a[:i]:
#         print(a[i],end=' ')
#     else:
#         print(f"{a[i]}_{a[:i].count(a[i])}", end=' ')
# ___________________
# lst = input().split()
# res = {}
# for c in lst:
#     if c in res:
#         print(f'{c}_{res[c]}', end=' ')
#     else:
#         print(c, end=' ')
#     res[c] = res.get(c, 0) + 1


pets = [('Hatiko', 'Parker', 'Wilson', 50),
        ('Rusty', 'Josh', 'King', 25),
        ('Fido', 'John', 'Smith', 28),
        ('Butch', 'Jake', 'Smirnoff', 18),
        ('Odi', 'Emma', 'Wright', 18),
        ('Balto', 'Josh', 'King', 25),
        ('Barry', 'Josh', 'King', 25),
        ('Snape', 'Hannah', 'Taylor', 40),
        ('Horry', 'Martha', 'Robinson', 73),
        ('Giro', 'Alex', 'Martinez', 65),
        ('Zooma', 'Simon', 'Nevel', 32),
        ('Lassie', 'Josh', 'King', 25),
        ('Chase', 'Martha', 'Robinson', 73),
        ('Ace', 'Martha', 'Williams', 38),
        ('Rocky', 'Simon', 'Nevel', 32)]

# list = []
# dog_owner = {}
# from pprint import pprint
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
#
# pprint(dog_owner)
#
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
# result=dog_owner

#
# list = []
# dog_owner = {}
# from pprint import pprint
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
#
# pprint(dog_owner)
#
# for i in pets:
#         name=i[1],i[2], int(i[3])
#         dog=i[0]
#         dog_owner.setdefault(name, []).append(dog)
# result=dog_owner

#
# n = int(input())
# key_dic = []
# value_dic = []
# for i in range(n):
#     a = input().split(": ")
#     key_dic.append(a[0].lower())
#     value_dic.append(a[1])
# dic = dict(zip(key_dic, value_dic))
# n2 = int(input())
# for j in range(n2):
#      a2 = input().lower()
#      print(dic.get(a2, "–ù–µ –Ω–∞–π–¥–µ–Ω–æ"), sep='\n')
# ______________________

# result = {}
# for i in range(int(input())):
#     tmp = input().split(': ')
#     result[tmp[0].lower()] = tmp[1]
#     print(result)
# for i in range(int(input())):
#     print(result.get(input().lower(), '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'))


# ________________________________________________________________________________________________
# –ê–Ω–∞–≥—Ä–∞–º–º–∞ ‚Äì —Å–ª–æ–≤–æ (—Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ), –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—É—Ç—ë–º –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—É–∫–≤, —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏—Ö –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ (–∏–ª–∏ —Å–ª–æ–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–µ). –ù–∞–ø—Ä–∏–º–µ—Ä, –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Å–ª–æ–≤–∞ evil –∏ live ‚Äì —ç—Ç–æ –∞–Ω–∞–≥—Ä–∞–º–º—ã.
#
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —Å–ª–æ–≤–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ –∞–Ω–∞–≥—Ä–∞–º–º–∞–º–∏.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —Å–ª–æ–≤–∞, –∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ YES –µ—Å–ª–∏ —Å–ª–æ–≤–∞ —è–≤–ª—è—é—Ç—Å—è –∞–Ω–∞–≥—Ä–∞–º–º–∞–º–∏ –∏ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.
#
# Sample Input 1:
#
# thing
# night
#
# n1 = input()
# n2 = input()
# dic1 = {}
# for i in n1:
#     dic1[i] = dic1.get(i, 0) + 1
# dic2 = {}
# for i in n2:
#     dic2[i] = dic2.get(i, 0) + 1
# print(['NO', "YES"][dic2 == dic1])
# _____________
#
# print('YES' if sorted(input()) == sorted(input()) else 'NO')
# _____________
# s1=input().lower().strip('!,.,,,!,?,:,;,-''').replace(' ','').replace('!','')
# s2=input().lower().strip('!,.,,,!,?,:,;,- ').replace(' ','').replace('!','')
# print('YES' if {x:s1.count(x) for x in s1}=={x:s2.count(x) for x in s2} else 'NO')
#
# ____________________________________________________________________________________
# –í–∞–º –¥–∞–Ω —Å–ª–æ–≤–∞—Ä—å, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ –ø–∞—Ä —Å–ª–æ–≤-—Å–∏–Ω–æ–Ω–∏–º–æ–≤. –ü–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–µ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –æ–¥–Ω–æ–≥–æ –¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –µ–≥–æ —Å–∏–Ω–æ–Ω–∏–º.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä —Å–∏–Ω–æ–Ω–∏–º–æ–≤ nn. –î–∞–ª–µ–µ —Å–ª–µ–¥—É–µ—Ç nn —Å—Ç—Ä–æ–∫, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–∞ —Å–ª–æ–≤–∞-—Å–∏–Ω–æ–Ω–∏–º–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª–µ–¥—É–µ—Ç –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Å–∏–Ω–æ–Ω–∏–º –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –Ω–∞–π—Ç–∏.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —Å–ª–æ–≤–æ, —Å–∏–Ω–æ–Ω–∏–º –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ —Å–∏–Ω–æ–Ω–∏–º –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í—Å–µ —Å–ª–æ–≤–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã.
#
# Sample Input 1:
#
# 4
# Awful Terrible
# Beautiful Pretty
# Great Excellent
# Generous Bountiful
# Pretty
# Sample Output 1:
#
# Beautiful


# for key, value in prog.items():
#       if word == key:
#          print(value)
#       if word == value:
#          print(key)
# ____________________
#
# words = {}
# for _ in range(int(input())):
#     a, b = input().split()
#     print(a)
#     print(b)
#     words[a], words[b] = b, a
# print(words[input()])
# _____________________

# d = dict((input().split() for i in range(int(input()))))
# ad = {v: k for k, v in d.items()}
# key = input()
# print(ad.get(key, d.get(key)))

# ___________________________________________________________________________
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –∏ –≥–æ—Ä–æ–¥–æ–≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã. –ó–∞—Ç–µ–º –¥–∞–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –≤—ã–≤–æ–¥–∏—Ç, –≤ –∫–∞–∫–æ–π —Å—Ç—Ä–∞–Ω–µ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω nn. –î–∞–ª–µ–µ –∏–¥–µ—Ç nn —Å—Ç—Ä–æ–∫, –∫–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, –∑–∞—Ç–µ–º –∏–¥—É—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã. –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ —á–∏—Å–ª–æ mm, –¥–∞–ª–µ–µ –∏–¥—É—Ç mm –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–∫–∏—Ö-—Ç–æ mm –≥–æ—Ä–æ–¥–æ–≤, –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –≤—ã—à–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –¥–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–æ–º.
#
# Sample Input:
#
# 2
# –ì–µ—Ä–º–∞–Ω–∏—è –ë–µ—Ä–ª–∏–Ω –ú—é–Ω—Ö–µ–Ω –ì–∞–º–±—É—Ä–≥ –î–æ—Ä—Ç–º—É–Ω–¥
# –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã –ê–º—Å—Ç–µ—Ä–¥–∞–º –ì–∞–∞–≥–∞ –†–æ—Ç—Ç–µ—Ä–¥–∞–º –ê–ª–∫–º–∞—Ä
# 4
# –ê–º—Å—Ç–µ—Ä–¥–∞–º
# –ê–ª–∫–º–∞—Ä
# –ì–∞–º–±—É—Ä–≥
# –ì–∞–∞–≥–∞


# n = int(input())
# dic = {}
# dic_all = {}
# for i in range(n):
#     words = input().split()
#     a, *b = words
#     for j in b:
#         dic[j] = [a]
#         dic_all.update(dic)
# n2 = int(input())
# for j in range(n2):
#     word = input()
#     print(*dic_all[word])
# ___________________

# dct = {}
# for _ in range(int(input())):
#     a, *b = input().split()
#     dct.update(dict.fromkeys(b, a))
# for _ in range(int(input())):
#     print(dct[input()])
# ______________________
#
# d={}
# for _ in range(int(input())):
#     a=input().split()
#     for c in a[1:]:
#         d[c]=a[0]
#         print(d)
# for _ in range(int(input())):
#     print(d[input()])











