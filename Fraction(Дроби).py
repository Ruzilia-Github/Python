# Десятичные числа хранятся в списке numbers в виде строк. Дополните приведенный код, чтобы он для каждого десятичного числа вывел его представление в виде обыкновенной дроби в формате:
#
# десятичное число = обыкновенная дробь
# Примечание. Программа должна вывести
#
# 6.34 = 317/50
# 4.08 = 102/25
# 3.04 = 76/25
#
# from fractions import Fraction
# numbers = ['6.34', '4.08', '3.04', '7.49', '4.45', '5.39', '7.82', '2.76', '0.71', '1.97', '2.54', '3.67', '0.14', '4.29', '1.84', '4.07', '7.26', '9.37', '8.11', '4.30', '7.16', '2.46', '1.27', '0.29', '5.12', '4.02', '6.95', '1.62', '2.26', '0.45', '6.91', '7.39', '0.52', '1.88', '8.38', '0.75', '0.32', '4.81', '3.31', '4.63', '7.84', '2.25', '1.10', '3.35', '2.05', '7.87', '2.40', '1.20', '2.58', '2.46']
# for i in numbers:
#     print(i, ' = ', Fraction(i))

# ______________________________________________________________________________
# Десятичные числа разделенные символом пробела хранятся в строковой переменной s. Дополните приведенный код, чтобы он вывел сумму наибольшего и наименьшего числа в виде обыкновенной дроби.

# from fractions import Fraction
# from decimal import *
# s = '0.78 4.3 9.6 3.88 7.08 5.88 0.23 4.65 2.79 0.90 4.23 2.15 3.24 8.57 0.10 8.57 1.49 5.64 3.63 8.36 1.56 6.67 1.46 5.26 4.83 7.13 1.22 1.02 7.82 9.97 5.40 9.79 9.82 2.78 2.96 0.07 1.72 7.24 7.84 9.23 1.71 6.24 5.78 5.37 0.03 9.60 8.86 2.73 5.83 6.50 0.123 0.00021'
#
# n = 0
# l = []
# for i in s.split():
#     l.append(Decimal(i))
# print(Fraction(sorted(l)[0] + sorted(l)[-1]))
# _________________________________________________________________________
# from fractions import Fraction as F
#
# s = '0.78 4.3 9.6 3.88 7.08 5.88 0.23 4.65 2.79 0.90 4.23 2.15 3.24 8.57 0.10 8.57 1.49 5.64 3.63 8.36 1.56 6.67 1.46 5.26 4.83 7.13 1.22 1.02 7.82 9.97 5.40 9.79 9.82 2.78 2.96 0.07 1.72 7.24 7.84 9.23 1.71 6.24 5.78 5.37 0.03 9.60 8.86 2.73 5.83 6.50 0.123 0.00021'
#
# print(F(max(s.split()))+F(min(s.split())))

# _____________________________________________________________________________
# Даны два натуральных числа mm и nn. Напишите программу, которая сокращает дробь \dfrac{m}{n}
# n
# m
#   и выводит ее.
#
# Формат входных данных
# На вход программе подается два натуральных числа, числитель и знаменатель дроби, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести ответ на задачу.
# Sample Input 1:
#
# 3
# 6
# Sample Input 1:
#
# 3
# 6
# Sample Output 1:
#
# 1/2

# from  fractions import Fraction
# n1 = Fraction(int(input()), int(input()))
# print(n1)

# _______________________________________________________________
# Даны две дроби в формате a/b. Напишите программу, которая вычисляет и выводит их сумму, разность, произведение и частное.
#
# Формат входных данных
# На вход программе подаются две ненулевые дроби, каждая на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести сумму, разность, произведение и частное двух дробей.
#
# Примечание. Обратите внимание на третий тест: исходные дроби сокращать не нужно, а результат нужно.
#
# Sample Input 1:
#
# 2/3
# 3/7
# Sample Output 1:
#
# 2/3 + 3/7 = 23/21
# 2/3 - 3/7 = 5/21
# 2/3 * 3/7 = 2/7
# 2/3 / 3/7 = 14/9

#
# from  fractions import Fraction
# n_1, n_2 = input(), input()
# n1, n2 = Fraction(n_1), Fraction(n_2)
# print(f"{n_1} + {n_2} = {n1 + n2}")
# print(f"{n_1} - {n_2} = {n1 - n2}")
# print(f"{n_1} * {n_2} = {n1 * n2}")
# print(f"{n_1} / {n_2} = {n1 / n2}")

# ____________________________________________________
# На вход программе подается натуральное число nn. Напишите программу, которая вычисляет и выводит рациональное число, равное значению выражения

# from fractions import Fraction
# n = int(input())
# s = 0
# for  i in range(1, n + 1):
#     s += Fraction(1, i**2)
# print(s)

# ________________________________________________________
# На вход программе подается натуральное число nn. Напишите программу, которая вычисляет и выводит рациональное число, равное значению выражения

# from fractions import Fraction
# from math import factorial
#
# n = int(input())
# s = 0
# for  i in range(1, n + 1):
#     s += Fraction(1, factorial(i))
# print(s)

# __________________________________________________________
# На вход программе подается натуральное число nn. Напишите программу, которая выводит в порядке возрастания все несократимые дроби, заключённые между 00 и 11, знаменатель которых не превосходит nn.

# from fractions import Fraction
# from math import factorial
#
# n = int(input())
# s = 0
# for  i in range(1, n + 1):
#     s += Fraction(1, factorial(i))
#     print
# ____________________________________________________________
# Дима учится в седьмом классе и сейчас они проходят обыкновенные дроби с натуральными числителем и знаменателем. Вчера на уроке математики Дима узнал, что дробь называется правильной, если ее числитель меньше знаменателя, и несократимой, если нет равной ей дроби с меньшими натуральными числителем и знаменателем.
#
# Дима очень любит математику, поэтому дома он долго экспериментировал, придумывая и решая разные задачки с правильными несократимыми дробями. Одну из этих задач Дима предлагает решить вам с помощью компьютера.
#
# На вход программе подается натуральное число nn. Напишите программу, которая находит наибольшую правильную несократимую дробь с суммой числителя и знаменателя равной nn.
#
# Формат входных данных
# На вход программе подается натуральное число nn.
#
# Формат выходных данных
# Программа должна вывести ответ на задачу.
#
# Примечание. Возможно вам потребуется функция gcd(), которая позволяет находить наибольший общий делитель (НОД) двух чисел. Функция реализована в модуле math.













