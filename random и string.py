# IP –∞–¥—Ä–µ—Å —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö —á–∏—Å–µ–ª –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç 00 –¥–æ 255255 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–æ—á–∫–æ–π.
#
# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é generate_ip(), –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random  –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π IP –∞–¥—Ä–µ—Å.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ) IP –∞–¥—Ä–µ—Å–∞:
#
# 192.168.5.250        # –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
# 199.300.521.255      # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π


#
# import random
# def generate_ip():
#    return (f'{random.randint(100, 256)}.{random.randint(100, 256)}.{random.randint(0, 9)}.{random.randint(100, 256)}')
# print(generate_ip())
#
# ___________
import random

#
# def generate_ip():
#     return '.'.join([str(random.randint(0, 255)) for _ in range(4)])
# print(generate_ip())
# _________
# import random
# def generate_ip():
#     a = []
#     for _ in range(4):
#         a.append(str(random.randint(0, 255)))
#     return '.'.join(a)
# _________________________________________________

# –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –≤ –õ–∞—Ç–≤–µ—Ä–∏–∏ –∏–º–µ–µ—Ç –≤–∏–¥: LetterLetterNumber_NumberLetterLetter, –≥–¥–µ Letter ‚Äì –∑–∞–≥–ª–∞–≤–Ω–∞—è –±—É–∫–≤–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞, Number ‚Äì —á–∏—Å–ª–æ –æ—Ç 00 –¥–æ 9999 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).
#
# –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é generate_index(), –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –õ–∞—Ç–≤–µ—Ä–∏–∏.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–∏–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ) –∏–Ω–¥–µ–∫—Å–∞ –õ–∞—Ç–≤–µ—Ä–∏–∏:
#
# AB23_56VG          # –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
# V3F_231GT          # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å–∏–º–≤–æ–ª _ –≤ –ø–æ—á—Ç–æ–≤–æ–º –∏–Ω–¥–µ–∫—Å–µ.

# import random
# import string
# def generate_ip():
#      return (f"{random.choice(string.ascii_uppercase)}{random.choice(string.ascii_uppercase)}{random.randint(0, 9)}_{random.randint(0, 9)}{random.randint(0, 9)}{random.choice(string.ascii_uppercase)}")
# print(generate_ip())
#
# _________________
#
# from random import choice, randrange
# from string import ascii_uppercase
#
# def generate_index():
#     n1, n2 = (randrange(100) for i in range(2))
#     a, b, c, d = (choice(ascii_uppercase) for i in range(4))
#     return (f'{a}{b}{n1}_{n2}{c}{d}')
#
# _________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∞—Ç—Ä–∏—Ü—ã (–¥–≤—É–º–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞).
# import random
# numbers = [[1, 2, 3, 4],
#           [5, 6, 7, 8],
#           [9, 10, 11, 12],
#           [13, 14, 15, 16]]
#
# random.shuffle(numbers)
#
# print(numbers, sep="\n")
#
# import random
# ___________________________________________________________

# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 100 —Å–ª—É—á–∞–π–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –≤—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏—Ö —É—Å–ª–æ–≤–∏–π:
#
# –Ω–æ–º–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –Ω—É–ª–µ–π;
# –Ω–æ–º–µ—Ä –ª–æ—Ç–µ—Ä–µ–π–Ω–æ–≥–æ –±–∏–ª–µ—Ç–∞ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 7 —Ü–∏—Ñ—Ä;
# –≤—Å–µ 100 –ª–æ—Ç–µ—Ä–µ–π–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏.


# import random
#
# s =[]
# count = 0
# while count == 100:
#     n = ""
#     while len(n) < 8:
#            l = random.randint(0, 100)
#            print(l)
#            n += str(l)
#            print(n)
#            if n[0] in "0":
#                del n[0]
#     if n not in s:
#         s.append(n)
#         count += 1
#         print(n)
# ______________________________________________________________________________________
# –ê–Ω–∞–≥—Ä–∞–º–º–∞ ‚Äì —ç—Ç–æ —Å–ª–æ–≤–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—É—Ç—ë–º –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—É–∫–≤, —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∏—Ö –¥—Ä—É–≥–æ–µ —Å–ª–æ–≤–æ.
#
# –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–ª–æ–≤–∞ –ø–∏–ª–∞ –∏ –ª–∏–ø–∞ –∏–ª–∏ –ø–æ—Å—Ç –∏ —Å—Ç–æ–ø ‚Äì –∞–Ω–∞–≥—Ä–∞–º–º—ã.
#
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏ –≤—ã–≤–æ–¥–∏—Ç —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –µ–≥–æ —Å–ª—É—á–∞–π–Ω—É—é –∞–Ω–∞–≥—Ä–∞–º–º—É.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –º–µ—Ç–æ–¥ shuffle() —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º, –∞ –Ω–µ —Å–æ —Å—Ç—Ä–æ–∫–æ–π.
#
# import random
# numbers = [i for i in input().lower()]
# random.shuffle(numbers)
# print(''.join(numbers))
#
# # _____________________________
# print(''.join(shuffle(list(input()))))
# _____________________________________________________________

# –î–ª—è –∏–≥—Ä—ã –≤ –±–∏–Ω–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–º 5 \times 55√ó5, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ) —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –æ—Ç 11 –¥–æ 7575 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ), –ø—Ä–∏ —ç—Ç–æ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–ª–µ—Ç–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ø—É—Å—Ç–æ–π (–æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º 00).
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –∏–≥—Ä—ã –≤ –±–∏–Ω–≥–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –î–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ—Ç–≤–æ–¥–∏—Ç—å –Ω–∞ –≤—ã–≤–æ–¥ –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ —Ä–æ–≤–Ω–æ 33 —Å–∏–º–≤–æ–ª–∞. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–π –º–µ—Ç–æ–¥ ljust().
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü—Ä–∏–º–µ—Ä –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞:
#
# 1  16 31 46 61
# 10 30 42 47 68
# 3  18 0  48 63
# 9  19 34 49 70
# 5  20 35 50 65

# import random
# mtr2 =[]
# for i in range(5):
#     mtr = []
#     for j in range(5):
#         if i == 2 and j == 2:
#             mtr.append(0)
#         else:
#             numbers = random.randint(1, 75)
#             mtr.append(numbers)
#     mtr2.append(mtr)
# for i in range(5):
#     for j in range(5):
#         print(str(mtr2[i][j]).ljust(3), end=' ')
#     print()

# ____________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç nn –ø–∞—Ä–æ–ª–µ–π –¥–ª–∏–Ω–æ–π mm —Å–∏–º–≤–æ–ª–æ–≤, —Å–æ—Å—Ç–æ—è—â–∏—Ö –∏–∑ —Å—Ç—Ä–æ—á–Ω—ã—Ö –∏ –ø—Ä–æ–ø–∏—Å–Ω—ã—Ö –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∫—Ä–æ–º–µ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ª–µ–≥–∫–æ –ø–µ—Ä–µ–ø—É—Ç–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π:
#
# ¬´l¬ª (L –º–∞–ª–µ–Ω—å–∫–æ–µ);
# ¬´I¬ª (i –±–æ–ª—å—à–æ–µ);
# ¬´1¬ª (—Ü–∏—Ñ—Ä–∞);
# ¬´o¬ª –∏ ¬´O¬ª (–±–æ–ª—å—à–∞—è –∏ –º–∞–ª–µ–Ω—å–∫–∞—è –±—É–∫–≤—ã);
# ¬´0¬ª (—Ü–∏—Ñ—Ä–∞).
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —á–∏—Å–ª–∞ nn –∏ mm, –∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ nn –ø–∞—Ä–æ–ª–µ–π –¥–ª–∏–Ω–æ–π mm —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏, –∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°—á–∏—Ç–∞—Ç—å, —á—Ç–æ —á–∏—Å–ª–∞ nn –∏ mm –≤—Å–µ–≥–¥–∞ —Ç–∞–∫–æ–≤—ã, —á—Ç–æ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø–∞—Ä–æ–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –í –∫–∞–∂–¥–æ–º –ø–∞—Ä–æ–ª–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞ –∏ –±—É–∫–≤–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º –∏ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ —É–¥–æ–±–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –≤–∏–¥–µ –¥–≤—É—Ö –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:
#
# —Ñ—É–Ω–∫—Ü–∏—è generate_password(length) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª–∏–Ω–æ–π length —Å–∏–º–≤–æ–ª–æ–≤;
# —Ñ—É–Ω–∫—Ü–∏—è generate_passwords(count, length) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ count —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π –¥–ª–∏–Ω–æ–π length —Å–∏–º–≤–æ–ª–æ–≤.
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 4. –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–µ –Ω–∏–∂–µ —Ç–µ—Å—Ç—ã ‚Äì —ç—Ç–æ –ª–∏—à—å –æ–±—Ä–∞–∑—Ü—ã –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞. –í–æ–∑–º–æ–∂–Ω—ã –∏ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π.
#
# –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–¥–∞ üü°
# Sample Input 1:
#
# 9
# 7
# Sample Output 1:
#
# YbykdW8
# heEWSyL
# MDxYCzf
# syWRujr
# mFGBYNJ
# bhmg5ip
# 2XmPgsx
# hy7UMVs
# JzKPyBw

# import random
#
# digits = '0123456789'
# lowercase_letters = 'abcdefghijklmnopqrstuvwxyz'
# uppercase_letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
#
#
# chars = ''
# n, m = int(input()), int(input())
# chars = digits + lowercase_letters +uppercase_letters
# for c in 'lI1oO0':
#     chars = chars.replace(c, '')
# for i in range(n):
#     password = ""
#     for j in range(m):
#          password += random.choice(chars)
#     print(password)

# _________________________________________________________________
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å –ø–æ–º–æ—â—å—é –º–æ–¥—É–ª—è random –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç nn –ø–∞—Ä–æ–ª–µ–π –¥–ª–∏–Ω–æ–π mm —Å–∏–º–≤–æ–ª–æ–≤, —Å–æ—Å—Ç–æ—è—â–∏—Ö –∏–∑ —Å—Ç—Ä–æ—á–Ω—ã—Ö –∏ –ø—Ä–æ–ø–∏—Å–Ω—ã—Ö –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä, –∫—Ä–æ–º–µ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ª–µ–≥–∫–æ –ø–µ—Ä–µ–ø—É—Ç–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π:
#
# ¬´l¬ª (L –º–∞–ª–µ–Ω—å–∫–æ–µ);
# ¬´I¬ª (i –±–æ–ª—å—à–æ–µ);
# ¬´1¬ª (—Ü–∏—Ñ—Ä–∞);
# ¬´o¬ª –∏ ¬´O¬ª (–±–æ–ª—å—à–∞—è –∏ –º–∞–ª–µ–Ω—å–∫–∞—è –±—É–∫–≤—ã);
# ¬´0¬ª (—Ü–∏—Ñ—Ä–∞).
# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ: –≤ –∫–∞–∂–¥–æ–º –ø–∞—Ä–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞ –∏ –∫–∞–∫ –º–∏–Ω–∏–º—É–º –ø–æ –æ–¥–Ω–æ–π –±—É–∫–≤–µ –≤ –≤–µ—Ä—Ö–Ω–µ–º –∏ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —á–∏—Å–ª–∞ nn –∏ mm, –∫–∞–∂–¥–æ–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ nn –ø–∞—Ä–æ–ª–µ–π –¥–ª–∏–Ω–æ–π mm —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏, –∫–∞–∂–¥—ã–π –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –°—á–∏—Ç–∞—Ç—å, —á—Ç–æ —á–∏—Å–ª–∞ nn –∏ mm –≤—Å–µ–≥–¥–∞ —Ç–∞–∫–æ–≤—ã, —á—Ç–æ —Ç—Ä–µ–±—É–µ–º—ã–µ –ø–∞—Ä–æ–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ.
#
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ —É–¥–æ–±–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –≤–∏–¥–µ –¥–≤—É—Ö –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:
#
# —Ñ—É–Ω–∫—Ü–∏—è generate_password(length) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª–∏–Ω–æ–π length —Å–∏–º–≤–æ–ª–æ–≤;
# —Ñ—É–Ω–∫—Ü–∏—è generate_passwords(count, length) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ count —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π –¥–ª–∏–Ω–æ–π length —Å–∏–º–≤–æ–ª–æ–≤.
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –ü—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã–µ –Ω–∏–∂–µ —Ç–µ—Å—Ç—ã ‚Äì —ç—Ç–æ –ª–∏—à—å –æ–±—Ä–∞–∑—Ü—ã –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞. –í–æ–∑–º–æ–∂–Ω—ã –∏ –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π.

#
# import random
#
# digits = '23456789'
# lowercase_letters = 'abcdefghijkmnpqrstuvwxyz'
# uppercase_letters = 'ABCDEFGHJKLMNPQRSTUVWXYZ'
#
#
# chars = ''
# n, m = int(input()), int(input())
# chars = digits + lowercase_letters +uppercase_letters
# for i in range(n):
#     password = ""
#     password = random.choice(digits) + random.choice(lowercase_letters) + random.choice(uppercase_letters)
#     for j in range(m - 3):
#          password += random.choice(chars)
#     print(password)

# ________________________________________________________________________
#
#
# import random
# mtr_second =[]
# i = 0
# while i < 5:
#     mtr = []
#     j = 0
#     i+=1
#     while j < 5:
#         if i == 3 and j == 2:
#             mtr.append(0)
#             j += 1
#         else:
#             numbers = random.randint(1, 75)
#             if (numbers in mtr_second[0]) and (numbers in mtr):
#                 continue
#             else:
#                 mtr.append(numbers)
#                 j += 1
#     mtr_second.append(mtr)
# for i in range(5):
#     for j in range(5):
#         print(str(mtr_second[i][j]).ljust(3), end=' ')
#     print()
#
# ___________________________________________
# import random
# a = [[random.randint(1, 75) for _ in range(5)] for _ in range(5)]
# a[2][2] = 0
#
# for i in range(5):
#     for j in range(5):
#         print(str(a[i][j]).ljust(3), end='')
#     print()
#
# # ____________________________________________-
from random import *
numbers = set(sample([i for i in range(1, 76)], 25))
s = [[numbers.pop() for _ in range(5)] for _ in range(5)]
s[2][2] = 0
for row in s:
    print(*(str(k).ljust(3) for k in row))
#
#
# import numpy as np
# from numpy import random
# p=np.random.choice(range(50),size=(5, 5), replace=False)
# p[2,2]=0
# for i in range(5):
#     for j in range(5):
#         print(str(p[i][j]).ljust(3), end=' ')
#     print()