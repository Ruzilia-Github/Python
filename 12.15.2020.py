5.3
1. Давайте на практике применим метод подсчета

На вход вашей программе поступает положительное целое число n, а ваша задача вывести в порядке возрастания все цифры, которые встречались в этом числе, и напротив каждого также необходимо вывести сколько раз данная цифра встречалась в числе n

Разбор Youtube Patreon Boosty

Sample Input 1:

45654
Sample Output 1:

4 2
5 2
6 1
Sample Input 2:

11111
Sample Output 2:

1 5

n=int(input())
a = [0]*10
for i in str(n):
    digit = int(i)
    a[digit] +=1
for i in range(10):
    if a[i]>0:
        print(i, a[i])


2. Сортировка подсчетом

Как видно из названия задачи, вам необходимо отсортировать список, состоящий только из чисел в пределах от -100 до 100 включительно, сортировкой подсчетом.

Программа получает на вход число n - количество элементов в списке, затем сами элементы списка

Вам необходимо вывести отсортированный список

P.S. не пользуйтесь встроенной функцией sorted или методом sort

Sample Input 1:

5
8 9 8 7 2
Sample Output 1:

2 7 8 8 9
Sample Input 2:

7
-8 5 -7 4 -8 0 4
Sample Output 2:

-8 -8 -7 0 4 4 5
Sample Input 3:

8
66 -66 -48 -96 -17 -80 -57 -45
Sample Output 3:

-96 -80 -66 -57 -48 -45 -17 66

n = int(input())
a = input().split(' ')
s = [0] * 201
for i in a:
    s[int(i) + 100] += 1
for i in range(len(s)):
    if s[i] > 0:
        print((str(i - 100) + ' ') * s[i], end='')

____________________

n= int(input())
a= map(int,input().split())
count =[0]*201
for i in a:
    count[i] +=1
for i in range (-100,101):
     if count[i]!=0:
        print((str(i)+' ') * count[i], end='')


 5.5 Вложенные циклы
1. В этой задаче вам предстоит построить лесенку из чисел. Программа принимает на вход целое положительное число n (n<=15) - количество уровней, ваша задача вывести n уровней, в каждом из которых стоят числа от 1 до значения уровня.

Sample Input 1:

2
Sample Output 1:

1
1 2

Sample Input 2:

3
Sample Output 2:

1
1 2
1 2 3


n=int(input())
for i in range(n+1):
    for j in range(1,i+1):
        print(j,end =' ')
    print()

2. Постулат Бертрана
Постулат Бертрана (теорема Бертрана-Чебышева, теорема Чебышева) гласит, что для любого n > 1 найдется простое число p в интервале n < p < 2n. Такая гипотеза была выдвинута в 1845 году французским математиком Джозефем Бертраном (проверившим ее до n=3000000) и доказана в 1850 году Пафнутием Чебышевым. Раманужан в 1920 году нашел более простое доказательство, а Эрдеш в 1932 – еще более простое.

Ваша задача состоит в том, чтобы решить несколько более общую задачу – а именно по числу n найти количество простых чисел p из интервала n < p < 2n.

Напомним, что число называется простым, если оно делится только само на себя и на единицу.

Входные данные
Программа принимает на вход целое число n (2 ≤ n ≤ 50000).

Выходные данные
Вам необходимо вывести на экран одно число – количество простых чисел p на интервале  n < p < 2n.

Разбор Youtube Patreon Boosty

Sample Input 1:

2
Sample Output 1:

1
Sample Input 2:

4
Sample Output 2:

2

n=int(input())
count=0
for i  in range (n+1, 2*n):
    if i%2==0  and i!=2 or i==1:
        continue
    d=3
    b=True
    while d*d<=i:
        if i%d==0:
            b=False
            break
        d+=2
    if b:
        count +=1
print(count)

3.