# 1. Заполнение змейкой
#
# Даны числа n и m. Создайте массив A[n][m] и заполните его змейкой (см. пример).
#
# Входные данные
# Программа получает на вход два числа n и m.
#
# Выходные данные
# Программа должна вывести  полученный массив, при этом между числами может быть любое количество пробелов.
#
# Sample Input:
#
# 4 10
# Sample Output:
#
# 0  1  2  3  4  5  6  7  8  9
# 19 18 17 16 15 14 13 12 11 10
# 20 21 22 23 24 25 26 27 28 29
# 39 38 37 36 35 34 33 32 31 30
#
# n,c=map(int, input().split())
# x=0
# a=[]
# for i in range(n):
#     b=[]
#     for j in range (c):
#         x =(i*c)+j
#         b.append(x)
#     a.append(x)
# for i in range(c):
#     r=c-1
#     for j in range(c):
#         if i%2!=0:
#             while r!=0:
#                 print(a[i][r], end=" ")
#         else:
#             print(a[i][j], end=" ")
#     print()
#
# 2. 5.7 Вложенные списки, Часть 2
# 3 из 7 шагов пройдено
# 17 из 46 баллов  получено
# A. Фотографии Брейна
#
# Маленького, но очень смелого мышонка Брейна не взяли в летнюю школу юных злодеев. Он расстроился и решил отодвинуть свои планы по захвату мира, а вместо этого податься в фотографы.
#
# Как вам наверняка известно, самые крутые фотографии получаются на пленку (ведь тогда в хештегах можно указать #пленка).
#
# Брейн наснимал очень много красочных фотографий на цветную и черно-белую пленки. Затем проявил и перевел их в цифровой вид. Но вот незадача! Теперь цветные и черно-белые фотографии лежат в одной папке, и, чтобы их рассортировать, нужно потратить не один час!
#
# Так как Брейн теперь фотограф, а не программист, он просит вас помочь ему для одной фотографии определить, цветная она или черно-белая.
#
# Фотография представляет собой матрицу размера n × m, в каждой ячейке которой хранится символ, обозначающий цвет соответствующего пикселя. Всего существует 6 цветов:
#
# 'C' (cyan) — голубой
# 'M' (magenta) — пурпурный
# 'Y' (yellow) — желтый
# 'W' (white) — белый
# 'G' (grey) — серый
# 'B' (black) — черный
# Фотографию можно считать черно-белой, если в ней есть только белый, серый или черный цвет. Если же присутствует хоть один пиксель голубого, пурпурного или желтого цвета, она цветная.
#
# Входные данные
#
# В первой строке содержится два целых числа n и m (1 ≤ n, m ≤ 100) — количество строк и столбцов в матрице пикселей фотографии соответственно.
#
# Далее следуют n строк, описывающих строки матрицы. Каждая из них состоит из m разделенных пробелом символов, описывающих цвета пикселей в строке. Каждый из символов в строке является одним из символов 'C', 'M', 'Y', 'W', 'G' или 'B'.
#
# Выходные данные
#
# В единственной строчке выведите «#Black&White» (без кавычек), если фотография черно-белая, и «#Color» (без кавычек), если цветная.
#
# Sample Input 1:
#
# 2 2
# C M
# Y Y
# Sample Output 1:
#
# #Color
# Sample Input 2:
#
# 3 2
# W W
# W W
# B B
# Sample Output 2:
#
# #Black&White

# n, m = map(int, input().split())
# a = []
#
# for el in range(n):
#     a.append(list(map(str, input().split())))
#
# count = 0
#
# for i in range(n):
#     for j in range(m):
#         if a[i][j] == 'C' or a[i][j] == 'M' or a[i][j] == 'Y':
#             count += 1
# if count != 0:
#     print('#Color')
# else:
#     print('#Black&White')
#
# 3. 6.1 Словари Python. Операции и методы словаря
# 1 из 11 шагов пройден
# 0 из 27 баллов  получено
# На вход программе поступает целое число n. Вам необходимо создать словарь, который будет включать в себя ключи от 1 до n, а значениями соответствующего ключа будет значение ключа в квадрате.
#
# В качестве ответа выведите полученный словарь
#
# Sample Input:
#
# 20
# Sample Output:
#
# {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100, 11: 121, 12: 144, 13: 169, 14: 196, 15: 225, 16: 256, 17: 289, 18: 324, 19: 361, 20: 400}

# from string import ascii_lowercase
# a = ascii_lowercase
# print(a)
# alfphabet={}
# count=0
# for i in a[:]:
#     count +=1
#     alfphabet.setdefault(i,count)
#     alfphabet.items()
# for i  in alfphabet.items():
#     print(*i)


# 6.1 Словари Python. Операции и методы словаря
# 4 из 11 шагов пройдено
# 6 из 27 баллов  получено
# Есть два словаря, нужно их объединить в новый словарь rez и вывести его на экран
#
# Sample Input:
#
# Sample Output:
#
# {'a': 100, 'b': 200, 'c': 333, 'x': 300, 'y': 200, 'z': 777}



# d1 = {'a': 100, 'b': 200, 'c': 333}
# d2 = {'x': 300, 'y': 200, 'z': 777}
# rez=[]
# for i in d1.items():
#     rez.append(i)
# for i in d2.items():
#     rez.append(i)
# rez=dict(rez)
# print(rez)

# Система регистрации
# В скором времени в Берляндии откроется новая почтовая служба "Берляндеск". Администрация сайта хочет запустить свой проект как можно быстрее, поэтому они попросили Вас о помощи. Вам предлагается реализовать прототип системы регистрации сайта.
#
# Система должна работать по следующему принципу. Каждый раз, когда новый пользователь хочет зарегистрироваться, он посылает системе запрос name со своим именем. Если данное имя не содержится в базе данных системы, то оно заносится туда и пользователю возвращается ответ OK, подтверждающий успешную регистрацию. Если же на сайте уже присутствует пользователь с именем name, то система формирует новое имя и выдает его пользователю в качестве подсказки, при этом подсказка также добавляется в базу данных. Новое имя формируется по следующему правилу. К name последовательно приписываются числа, начиная с единицы (name1, name2, ...), и среди них находят такое наименьшее i, что namei не содержится в базе данных сайта.
#
# Входные данные
# В первой строке входных данных задано число n (1 ≤ n ≤ 105). Следующие n строк содержат запросы к системе. Каждый запрос представляет собой непустую строку длиной не более 32 символов, состоящую только из строчных букв латинского алфавита.
#
# Выходные данные
# В выходных данных должно содержаться n строк — ответы системы на запросы: OK в случае успешной регистрации, или подсказку с новым именем, если запрашиваемое уже занято.
#
# Разбор Youtube Patreon Boosty
#
# Sample Input 1:
#
# 4
# abc
# abcd
# abc
# acab
# Sample Output 1:
#
# OK
# OK
# abc1
# OK

# logins={}
# n = int(input())
# for i in range(n):
#     login = input()
#     if login in logins:
#         print((f'{login}{logins[login]}'))
#         logins[login]+=1
#     else:
#          print("OK")
#          logins[login]=1

# 6.1 Словари Python. Операции и методы словаря
# 6 из 11 шагов пройдено
# 12 из 27 баллов  получено
# Представьте, у нас есть список товаров и их стоимость, но мы хотим взглянуть на него в отсортированном виде. Вверху хотим видеть самые дорогие товары, внизу самые дешевые
#
# Программа будет принимать строки, в которых сперва указывается название товара, а затем через двоеточие с пробелом его цена - целое положительное число.
#
# Строка "конец" означает списка товаров и соответственно окончание ввода
#
# Все товары имеют уникальные названия, цены не дублируются.
#
# Ваша задача вывести список товаров по уменьшению цены
#
# Sample Input:
#
# Sony PlayStation 5: 46000
# Телевизор QLED Samsung QE65Q60TAU: 87090
# Смартфон Samsung Galaxy A11: 10000
# Планшет Samsung Galaxy Tab S6: 26600
# конец
# Sample Output:
#
# Телевизор QLED Samsung QE65Q60TAU
# Sony PlayStation 5
# Планшет Samsung Galaxy Tab S6
# Смартфон Samsung Galaxy A11

# a=int(input())
# b=int(input())
# print(a,"+", b, '=',a+b)
# print(a+" +"+ b+'=',a+b)

# Трехзначное число
# Напишите программу, в которой рассчитывается сумма и произведение цифр положительного трёхзначного числа.
#
# Формат входных данных
# На вход программе подаётся положительное трёхзначное число.
#
# Формат выходных данных
# Программа должна вывести два числа с поясняющим текстом: сумма цифр и произведение цифр.
#
# Sample Input 1:
#
# 123
# Sample Output 1:
#
# Сумма цифр = 6
# Произведение цифр = 6
# n=int(input())
# a = n % 10 # последнее  число
# b = (n % 100) // 10 # второе  число
# c = n // 100 #  третее число
# print(f'Сумма цифр = {a+b+c}')
# print(f'Произведение цифр = {a*b*c}')


# Перестановка цифр
# Дано трехзначное число \overline{abc}
# abc
#  , в котором все цифры различны. Напишите программу, которая выводит шесть чисел, образованных при перестановке цифр заданного числа.
#
# Формат входных данных
# На вход программе подаётся положительное трёхзначное целое число, все цифры которого различны.
#
# Формат выходных данных
# Программа должна вывести шесть чисел, образованных при перестановке цифр заданного числа в следующем порядке: abc, \, acb, \, bac, \, bca, \, cab, \, cbaabc,acb,bac,bca,cab,cba.
# n=int(input())
# a=n//100
# b=(n%100)//10
# c=n%10
#
# print(a,b,c,"\n", a,c,b,"\n",b,a,c,"\n",b,c,a,"\n",c,a,b,"\n",c,b,a, sep = "")
#
# Четырёхзначное число
# Напишите программу для нахождения цифр четырёхзначного числа.
#
# Формат входных данных
# На вход программе подаётся положительное четырёхзначное целое число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

#
# Пароль
# При регистрации на сайтах требуется вводить пароль дважды. Это сделано для безопасности, поскольку такой подход уменьшает возможность неверного ввода пароля.
#
# Напишите программу, которая сравнивает пароль и его подтверждение. Если они совпадают, то программа выводит: «Пароль принят», иначе: «Пароль не принят».
#
# Формат входных данных
# На вход программе подаются две строки.
#
# Формат выходных данных
# Программа должна вывести одну строку в соответствии с условием задачи.
#
# Sample Input 1:
#
# qwerty
# qwerty
# Sample Output 1:
#
# Пароль принят
#
# a=input()
# b=input()
# if a==b:
#     print('Пароль принят')
# else:
#     print('Пароль не принят')
#
# Четное или нечетное?
# Напишите программу, которая определяет, является число четным или нечетным.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести «Четное», если число четное, и «Нечетное» — если число нечетное.
#
# Sample Input 1:
#
# 10
# Sample Output 1:
#
# Четное
#
# n=int(input())
# if n%2==0:
#     print('Четное')
# else:
#     print('Нечетное')
#
# Соотношение
# Напишите программу, которая проверяет, что для заданного четырехзначного числа выполняется следующее соотношение: сумма первой и последней цифр равна разности второй и третьей цифр.
#
# Формат входных данных
# На вход программе подаётся одно целое положительное четырёхзначное число.
#
# Формат выходных данных
# Программа должна вывести «ДА», если соотношение выполняется, и «НЕТ» — если не выполняется.
#
# Sample Input 1:
#
# 1614
# Sample Output 1:
#
# ДА

# n=int(input())
# a=n//1000
# b=n%1000//100
# c=n%100//10
# d=n%10
# if a+d==b-c:
#     print('ДА')
# else:
#     print('НЕТ')
# # print(a,b,c,d)
#
# Роскомнадзор
# Напишите программу, которая определяет, разрешен пользователю доступ к интернет-ресурсу или нет.
#
# Формат входных данных
# На вход программе подаётся целое число — возраст пользователя.
#
# Формат выходных данных
# Программа должна вывести текст «Доступ разрешен» если возраст не менее 18, и «Доступ запрещен» в противном случае.
#
# Sample Input 1:
#
# 16
# Sample Output 1:
#
# Доступ запрещен
# Sample Input 2:
#
# 18
# Sample Output 2:
#
# Доступ разрешен
# Sample Input 3:
#
# 19
# Sample Output 3:
#
# Доступ разрешен
#
# n=int(input())
# if n>=18:
#     print("Доступ разрешен")
# else:
#     print("Доступ запрещен")


#
# Наименьшее из двух чисел
# Напишите программу, которая определяет наименьшее из двух чисел.
#
# Формат входных данных
# На вход программе подаётся два различных целых числа.
#
# Формат выходных данных
# Программа должна вывести наименьшее из двух чисел.
#
# Sample Input 1:
#
# 8
# 11
# Sample Output 1:
#
# 8
#
# a=int(input())
# b=int(input())
# if a<b:
#     print(a)
# else:
#     print(b)
#
#
# Наименьшее из четырёх чисел 🌶️
# Напишите программу, которая определяет наименьшее из четырёх чисел.
#
# Формат входных данных
# На вход программе подаётся четыре целых числа.
#
# Формат выходных данных
# Программа должна вывести наименьшее из четырёх чисел.
#
# Sample Input 1:
#
# 1
# 2
# 3
# 4
# Sample Output 1:
#
# 1
#
# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
# #
# a =int(input())
# b =int(input())
# c =int(input())
# d =int(input())

# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
#
# if a<b and a<c and a<d:
#     print(a)
# elif b<a and b<c and b<d:
#     print(b)
# elif c<a and c<d and c<b:
#     print(c)
# else:
#     print(d)
#
# Возрастная группа
# Напишите программу, которая по введённому возрасту пользователя сообщает, к какой возрастной группе он относится:
#
# до 13 включительно – детство;
# от 14 до 24 – молодость;
# от 25 до 59 – зрелость;
# от 60 – старость.
# Формат входных данных
# На вход программе подаётся одно целое число – возраст пользователя.
#
# Формат выходных данных
# Программа должна вывести название возрастной группы.
#
# Sample Input 1:
#
# 4
# Sample Output 1:
#
# детство
#
# n=int(input())
# if 0<=n<=13:
#     print("детство")
# elif 14<=n<=24:
#     print('молодость')
# elif 25<=n<=59:
#     print('зрелость')
# else:
#     print('старость')

# Только + 🌶️
# Напишите программу, которая считывает три числа и подсчитывает сумму только положительных чисел.
#
# Формат входных данных
# На вход программе подаются три целых числа.
#
# Формат выходных данных
# Программа должна вывести одно число – сумму положительных чисел.
#
# Примечание. Если положительных чисел нет, то следует вывести 00.
#
# Sample Input 1:
#
# 4
# -22
# 1
# Sample Output 1:
#
# 5

# a=int(input())
# b=int(input())
# c=int(input())
# sum=0
# if a>=0:
#     a=a
# else:
#     a=0
# if b>=0:
#    b=b
# else:
#    b=0
# if c>=0:
#    c=c
# else:
#    c=0
# print(a+b+c)

# n=int(input())
# if -3 < n   and n>7:
#     print("Принадлежит")
# else:
#     print("Не принадлежит")

# a=int(input())
# b=int(input())
# c=int(input())
# if a==b+c or b==c+a or c==b+c:
#     print("YES")
# else:
#     print("NO")

#
# 3. Ход ладьи
# Даны две различные клетки шахматной доски. Напишите программу, которая определяет, может ли ладья попасть с первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. Программа должна вывести «YES», если из первой клетки ходом ладьи можно попасть во вторую, или «NO» в противном случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Примечание. Шахматная ладья ходит по горизонтали или вертикали.
#
#
# Sample Input 1:
#
# 4
# 4
# 5
# 4
# Sample Output 1:
#
# YES
# Sample Input 2:
#
# 4
# 4
# 5
# 5
# Sample Output 2:
#
# NO
#
# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
# if a==c or  b==d:
#     print("YES")
# else:
#     print("NO")
#
# Ход короля 🌶️
# Даны две различные клетки шахматной доски. Напишите программу,  которая определяет, может ли король попасть с первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. Программа должна вывести «YES», если из первой клетки ходом короля можно попасть во вторую, или «NO» в противном случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Примечание. Шахматный король ходит по горизонтали, вертикали и диагонали, но только на 1 клетку.
#
# Sample Input 1:
#
# 4
# 4
# 5
# 5
# Sample Output 1:
#
# YES

# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
# if a-1<=c<=a+1 or b-1<=d<=b+1:
#     if -1 <= a - c <= 1 and -1 <= b - d <= 1:
#     print("YES")
# else:
#     print("NO")
#
# Гонка спидстеров
# Зум бросил вызов Флэшу и предложил ему честный поединок в виде гонки вокруг магнетара. В случае проигрыша эта нейтронная звезда зарядится и уничтожит мир, поэтому Флэш решил не рисковать без причины, и узнать у своего друга Циско Рамона есть ли смысл принимать вызов. Циско получил данные, что скорость Зума равна nn, а скорость Флэша равна kk.
#
# Напишите программу, которая должна вывести ответ Циско на вопрос Флэша.
#
# Формат входных данных
# На вход программе подаётся два целых числа nn и kk, скорость Зума и Флэша.
#
# Формат выходных данных
# Если Зум быстрее Флэша нужно вывести «NO», если Флэш быстрее Зума нужно вывести «YES», если их скорости равны нужно вывести "Don't know".
#
# Sample Input 1:
#
# 2204
# 1505
# Sample Output 1:
#
# NO

#
# nn=int(input())
# kk=int(input())
# if nn>kk:
#     print("NO")
# elif nn<kk:
#     print("YES")
# else:
#     print("Don't know")
#
# Вид треугольника
# Напишите программу, которая принимает три положительных числа и определяет вид треугольника, длины сторон которого равны введенным числам.
#
# Формат входных данных
# На вход программе подаются три числа – длины сторон существующего треугольника.
#
# Формат выходных данных
# Программа должна вывести на экран текст – вид треугольника («РSample Input 1:
#
# 145
# 145
# 139
# Sample Output 1:
#
# Равнобедренный», «Равнобедренный» или «Разносторонний»).

# Sample Input 1:
#
# 145
# 145
# 139
# Sample Output 1:
#
# Равнобедренный
#
# a =int(input())
# b =int(input())
# c =int(input())
# if a==b==c:
#     print("Равносторонний")
# elif a!=b!=c and a!=c:
#     print("Разносторонний")
# else:
#     print("Равнобедренный")

# Среднее число
# Даны три различных целых числа. Напишите программу, которая находит среднее по величине число.
#
# Формат входных данных
# На вход программе подаётся три различных целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести среднее число.
#
# Примечание. Средним называется число, которое будет вторым, если три числа отсортировать в порядке возрастания.
#
# Sample Input 1:
#
# 1
# 2
# 3
# Sample Output 1:
#
# 2

# a= int(input())
# b= int(input())
# c= int(input())
# if a<c<b:
#     print(c)
# elif c<a<b:
#     print(a)
# else:
#     print(b)
#
# Самописный калькулятор 🌶️
# Напишите программу, которая считывает с клавиатуры два целых числа и строку. Если эта строка является обозначением одной из четырёх математических операций (+, -, *, /), то выведите результат применения этой операции к введённым ранее числам, в противном случае выведите «Неверная операция». Если пользователь захочет поделить на ноль, выведите текст «На ноль делить нельзя!».
#
# Формат входных данных
# На вход программе подаются два целых числа, каждое на отдельной строке, и строка.
#
# Формат выходных данных
# Программа должна вывести результат применения операции к введенным числам или соответствующий текст, если операция неверная либо если происходит деление на ноль.
#
# Sample Input 1:
#
# 6104
# 0
# /
# Sample Output 1:
#
# На ноль делить нельзя!

# a=int(input())
# b=int(input())
# c=input()
# if b==0:
#     print("На ноль делить нельзя!")
# if c=="+":
#     print(a+b)
# elif c=="-":
#     print(a-b)
# elif c == "*":
#     print(a * b)
# elif c == "/":
#     print(a / b)

#
# a=int(input())
# b=int(input())
# c=input()
# if c == "/":
#     if  b==0 :
#         print("На ноль делить нельзя!")
#     else:
#         print(a/b)
# elif  c=="+":
#     print(a+b)
# elif c=="-":
#     print(a-b)
# elif c == "*":
#     print(a * b)
# else:
#     print('Неверная операция')
#
# Цветовой микшер 🌶️
# Красный, синий и желтый называются основными цветами, потому что их нельзя получить путем смешения других цветов. При смешивании двух основных цветов получается вторичный цвет:
#
# если смешать красный и синий, то получится фиолетовый;
# если смешать красный и желтый, то получится оранжевый;
# если смешать синий и желтый, то получится зеленый.
# Напишите программу, которая считывает названия двух основных цветов для смешивания. Если пользователь вводит что-нибудь помимо названий «красный», «синий» или «желтый», то программа должна вывести сообщение об ошибке. В противном случае программа должна вывести название вторичного цвета, который получится в результате.
#
# Формат входных данных
# На вход программе подаются две строки, каждая на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести полученный цвет смешения либо сообщение «ошибка цвета», если введён был не цвет.
#
# Примечание 1. Если смешать красный и красный, то получится красный и т.д.
#
# Примечание 2. Поиграйтесь с настоящим цветовым микшером 🙂
#
# Sample Input 1:
#
# красный
# синий
# Sample Output 1:
#
# фиолетовый


#
# a=input()
# b=input()
# if a == b and (a == 'красный' or a == 'желтый' or a == 'синий'):
#     print(a)
# elif (b=="красный" and a=="синий")  or (a=="красный" and b=="синий"):
#       print('фиолетовый')
# elif (b=="красный" and a=="желтый")  or (a=="желтый" and b=="красный"):
#       print('оранжевый')
# elif (b=="синий" and a=="желтый")  or (a=="синий" and b=="желтый"):
#       print('зеленый')
# else:
#       print('ошибка цвета')
#
#
# Цвета колеса рулетки 🌶️
# На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов:
#
# карман 0 зеленый;
# для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
# для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный;
# для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы с четным номером – черный;
# для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы с четным номером – красный.
# Напишите программу, которая считывает номер кармана и показывает, является ли этот карман зеленым, красным или черным. Программа должна вывести сообщение об ошибке, если пользователь вводит число, которое лежит вне диапазона от 0 до 36.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести цвет кармана либо сообщение «ошибка ввода», если введённое число лежит вне диапазона от 0 до 36.

# n=int(input())
# if 0<=n<=36:
#     if 1 <= n <= 10 or 19 <= n <= 28:
#         if n % 2 == 0:
#              print('черный')
#         else:
#             print('красный')
#     elif 11 <= n <= 18 or 9 <= n <= 36:
#         if n % 2 == 0:
#             print('красный')
#         else:
#             print('черный')
#     elif 0== n :
#         print('зеленый')
# else:
#     print('ошибка ввода')

# Площадь треугольника
# Напишите программу, которая считывает длины двух катетов в прямоугольном треугольнике и выводит его площадь.
#
#
#
# Формат входных данных
# На вход программе подаётся два числа с плавающей точкой – длины катетов, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести одно число – площадь треугольника.
#
# Sample Input 1:
#
# 443
# 390
# Sample Output 1:
#
# 86385.0

# a= float(input())
# b=float(input())
# print(0.5*a*b)
#
# Две старушки
# Две старушки идут навстречу друг другу с постоянными скоростями V_1V
# 1
# ​
#   и V_2V
# 2
# ​
#   км/ч. Определите, через какое время старушки встретятся, если расстояние между ними равно SS км.
#
#
#
# Формат входных данных
# На вход программе подаются три числа с плавающей точкой S, \, V_1, \, V_2S,V
# 1
# ​
#  ,V
# 2
# ​
#  , каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести одно число в соответствии с условием задачи.
#
# Примечание. Это очень быстрые старушки.
#
# Sample Input 1:
#
# 60.0
# 15.5
# 14.5
# Sample Output 1:
#
# 2.0
#

# a=float(input())
# b=float(input())
# c=float(input())
# print(a/(c+b))
#
#
# Dog age
# На вход программе подается число nn – количество собачьих лет. Напишите программу, которая вычисляет возраст собаки в человеческих годах.
#
# Формат входных данных
# На вход программе подаётся натуральное число – количество собачьих лет.
#
# Формат выходных данных
# Программа должна вывести возраст собаки в человеческих годах.
#
# Примечание. В течение первых двух лет собачий год равен 10.510.5 человеческим годам. После этого каждый год собаки равен 4 человеческим годам.
#
# Sample Input 1:
#
# 1
# Sample Output 1:
#
# 10.5

# a=float(input())
# if a<=2:
#      b=a*10.5
#    print(b)
# else:
#     print((a-2)*4 +(2*10.5))
# Первая цифра после точки
# Дано положительное действительное число. Выведите его первую цифру после десятичной точки.
#
# Формат входных данных
# На вход программе подается положительное действительное число.
#
# Формат выходных данных
# Программа должна вывести цифру в соответствии с условием задачи.
#
# Sample Input 1:
#
# 3384390.4339
# Sample Output 1:
#
# 4
# a=float(input())
# print(int((a*10)%10))

# Дробная часть
# Дано положительное действительное число. Выведите его дробную часть.
#
# Формат входных данных
# На вход программе подается положительное действительное число.
#
# Формат выходных данных
# Программа должна вывести дробную часть числа в соответствии с условием задачи.
#
# Sample Input 1:
#
# 44.45
# Sample Output 1:
#
# 0.45

# a=float(input())
# print((a-(int(a))))
#
# num = max(1, 3, -5, 7) + min(-3, 6, -8, -1) + abs(-17)
# print(num)
#
#
# Наибольшее и наименьшее
# Напишите программу, которая находит наименьшее и наибольшее из пяти чисел.
#
# Формат входных данных
# На вход программе подается пять целых чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести наименьшее и наибольшее число с поясняющей надписью.
#
# Sample Input 1:
#
# 1
# 2
# 3
# 4
# 5
# Sample Output 1:
#
# Наименьшее число = 1
# Наибольшее число = 5
#
# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
# e=int(input())
# print(f"Наименьшее число = {min(a,b,c,d,e)}")
# print(f"Наименьшее число = {max(a,b,c,d,e)}")
#
# Интересное число
# Назовем число интересным, если в нем разность максимальной и минимальной цифры равняется средней по величине цифре. Напишите программу, которая определяет интересное число или нет. Если число интересное, следует вывести – «Число интересное» иначе «Число неинтересное».
#
# Формат входных данных
# На вход программе подается целое трехзначное число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Sample Input 1:
#
# 945
# Sample Output 1:
#
# Число интересное

# n=int(input())
# a=n//100
# b=n%100//10
# c=n%10
# if (max(a,b,c)-min(a,b,c)) == ((a+b+c)-(max(a,b,c)+min(a,b,c))):
#      print('Число интересное')
# else:
#     print("Число неинтересное")
import math
# a = float(input())
# b = float(input())
# c = float(input())
# d = float(input())
# print(abs(((a-c)**2)+((b-d)**2)))
#
# a = float(input())
# b = float(input())
# c = float(input())
# d = float(input())
# print(abs(((a-c)**2)+((b-d)**2)))

# a = float(input())
# print((math.pi)*(a**2))
# print((2*(math.pi))*a)



# import math
# a = float(input())
# b = float(input())
# print((a+b)/2)
# print(math.sqrt(a*b))
# print(2*a*b/(a+b))
# print(math.sqrt((a**2+b**2)/2))

# import math
# a=float(input())
# a=(a* math.pi)/180
# print(math.sin(a) + math.cos(a)+ (math.tan(a) * math.tan(a)))

# Пол и потолок
# Напишите программу, вычисляющую значение \lceil x\rceil + \lfloor x\rfloor⌈x⌉ +⌊x⌋ по заданному вещественному числу xx.
#
# Формат входных данных
# На вход программе подается одно вещественное число xx.
#
# Формат выходных данных
# Программа должна вывести одно число – значение указанного выражения.
#
# Примечание. \lceil x\rceil⌈x⌉ – потолок числа, \lfloor x\rfloor⌊x⌋ – пол числа.

# import math
# from math import *
# x=float(input())
# print(math.floor(x)+math.ceil(x))

# from math import *
# x=float(input())
# print(floor(x)+ceil(x))

# import math
# n=float(input())
# a=float(input())
# print((n*(a**2))/((4*math.tan) * (math.pi/n)))

# Три города
# Даны названия трех городов. Напишите программу, которая определяет самое короткое и самое длинное название города.
#
# Формат входных данных
# На вход программе подаётся названия трех городов, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести самое короткое и длинное название города, каждое на отдельной строке.
#
# Примечание. Гарантируется, что длины названий всех трех городов различны.
#
# Sample Input 1:
#
# Москва
# Санкт-Петербург
# Екатеринбург
# Sample Output 1:
#
# Москва
# Санкт-Петербург
# a=input()
# b=input()
# c=input()
# if len(a)>len(b) and  len(a)>len(c):
#     if len(b)>len(c):
#         print(c)
#         print(a)
#     else:
#         print(b)
#         print(a)
# if  len(b)>len(a) and  len(b)>len(c):
#     if len(c)>len(a):
#         print(a)
#         print(b)
#     else:
#         print(c)
#         print(b)
# if  len(c)>len(a) and  len(c)>len(b):
#     if len(a)>len(b):
#         print(b)
#         print(c)
#     else:
#         print(a)
#         print(c)
#

# print(f'Футбольная команда {a} имеет длину {len(a)} символов')

# a=input()
# b=input()
# c=input()
# print(min(a,b,c, key=len))
# print(max(a,b,c, key=len))

# n=str(input())
# if "суббота" in n or "воскресенье" in n :
#     print('YES')
# else:
#     print("NO")
#
# n=str(input())
# if "@" in n and "." in n:
#     print('YES')
# else:
#     print("NO")
# a=str(input())
# b=int(input())
# for i in  range (b):
#     print(a)
#
# Последовательность символов
# Напишите программу, которая использует ровно три цикла for для печати следующей последовательности символов:
#
# AAA
# AAA
# AAA
# AAA
# AAA
# AAA
# BBBB
# BBBB
# BBBB
# BBBB
# BBBB
# E
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# G
# Формат входных данных
#
# Формат выходных данных
# Программа должна вывести указанную последовательность символов.
#
# Sample Input:
#
# Sample Output:
#
# AAA
# AAA
# AAA
# AAA
# AAA
# AAA
# BBBB
# BBBB
# BBBB
# BBBB
# BBBB
# E
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# TTTTT
# G

# for i in  range(6):
#      print('AAA')
# for i in range(5):
#     print('BBBB')
# print('E')
# for i in range(9):
#     print('ТТТТТ')
# print('G')

# Звездный прямоугольник
# На вход программе подается натуральное число nn.
#
# Напишите программу, которая печатает звездный прямоугольник размерами n \times 19n×19.
#
# Формат входных данных
# На вход программе подаётся натуральное число n \in [1; \, 20]n∈[1;20] — высота звездного прямоугольника.
#
# Формат выходных данных
# Программа должна вывести звездный прямоугольник размерами n \times 19n×19.
#
# Подсказка. Для печати звездной линии используйте умножение строки на число.
#
# Sample Input 1:
#
# 1
# Sample Output 1:
#
# *******************

# n=int(input())
# for i in range(n):
#     print("*"*19)
# Звездный треугольник
# На вход программе подается натуральное число n \, (n \ge 2)n(n≥2) – катет прямоугольного равнобедренного треугольника.
#
# Напишите программу, которая выводит звездный треугольник в соответствии с примером.
#
# Формат входных данных
# На вход программе подается одно натуральное число n \, (n \ge 2)n(n≥2).
#
# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием задачи.
#
# Sample Input 1:
#
# 3
# Sample Output 1:
#
# ***
# **
# *
#
# a=int(input())
# for i in range(a+1):
#     print('*'*a)
#     a -= 1
#
# Популяция
# На вход программе подается три натуральных числа m, \, p, \, nm,p,n:
#
# m:m: стартовое количество организмов;
# p:p: среднесуточное увеличение в %;
# n:n: количество дней для размножения.
# Напишите программу, которая предсказывает размер популяции организмов. Программа должна выводить размер популяции в каждый день, начиная с 11 и заканчивая nn-м днем.
#
# Формат входных данных
# На вход программе подается три натуральных числа.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Sample Input 1:
#
# 10
# 50
# 6
# Sample Output 1:
#
# 1 10.0
# 2 15.0
# 3 22.5
# 4 33.75
# 5 50.625
# 6 75.9375

# a=int(input())
# b=int(input())
# c=int(input())
#
# for i in range(c):
#     print(i+1, (a))
#     a = (a / 100 * b) + a

# a=int(input())
# b=int(input())
# if a<b:
#     for i in range(a,b+1):
#          print(i)
# else:
#      for i  in range(a,b-1,-1):
#             print(i)

# Последовательность чисел 3 🌶️
# Даны два целых числа mm и nn (m > nm>n). Напишите программу, которая выводит все нечетные числа от mm до nn включительно в порядке убывания.
#
# Формат входных данных
# На вход программе подаются два целых числа mm и nn, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести числа в соответствии с условием задачи.
#
# Примечание. Попробуйте решить задачу двумя способами: с использованием условного оператора if и без него.
#
# Sample Input 1:
#
# 77
# 62
# Sample Output 1:
#
# 77
# 75
# 73
# 71
# 69
# 67
# 65
# 63
# a=int(input())
# b=int(input())
# if a%2!=0:
#     for i in range(a,b-1,-2):
#          print(i)
# else:
#      for i  in range(a-1,b-1,-2):
#             print(i)
#

# Последовательность чисел 4
# Даны два натуральных числа mm и nn ( m \le nm≤n). Напишите программу, которая выводит все числа от mm до nn включительно удовлетворяющие хотя бы одному из условий:
#
# число кратно 17;
# число оканчивается на 9;
# число кратно 3 и 5 одновременно.
# Формат входных данных
# На вход программе подаются два натуральных числа mm и nn (m \le nm≤n), каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести числа в соответствии с условием задачи.
#
# Примечание. Если чисел удовлетворяющих условию нет, выводить ничего не надо.
#
# Sample Input 1:
#
# 1
# 20
# Sample Output 1:
#
# 9
# 15
# 17
# 19
#
# a=int(input())
# b=int(input())
# for i in range(a,b+2):
#        if i%17==0 or i%10==9 or (i%3==0 and i%5==0):
#               print(i)

# a=int(input())
# # for  i  in range(10):
# #        print(f'{a} x {i+1} = {(i+1)*a}')


# a=int(input())
# b=int(input())
# count=0
# for i in range(a, b+1):
#       if ((i**3)%10) == 4 or ((i**3)%10) == 9:
#              count +=1
# print(count)


# Сумма чисел
# На вход программе подается натуральное число nn, а затем nn целых чисел, каждое на отдельной строке. Напишите программу, которая подсчитывает сумму введенных чисел.
#
# Формат входных данных
# На вход программе подаются натуральное число nn, а затем nn целых чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести сумму данных чисел.
#
# Sample Input:
#
# 5
# 3
# 2
# 1
# 0
# -1
# Sample Output:
#
# 5
# n=int(input())
# sum_numbe=0
# for i  in range(n):
#        b=int(input())
#        sum_numbe = sum_numbe+b
# print(sum_numbe)
#
# Асимптотическое приближение
# На вход программе подается натуральное число nn. Напишите программу, которая вычисляет значение выражения
# \left(1+\dfrac12 + \dfrac13 + \ldots + \dfrac{1}{n} \right) - \ln (n).
# (1+
# 2
# 1
# ​
#   +
# 3
# 1
# ​
#  +…+
# n
# 1
# ​
#  )−ln(n).
#
# Примечание. Для вычисления натурального логарифма воспользуйтесь функцией log(n), которая находится в модуле math.
#
# Sample Input 1:
#
# 10
# Sample Output 1:
#
# 0.6263831609742079
#
#
# import math
# n=int(input())
# total=0
#
# for i  in  range(n):
#        total = total + 1/(i+1)
#
# print(total-(math.log(n)))

# Сумма чисел
# На вход программе подается натуральное число nn. Напишите программу, которая подсчитывает сумму тех чисел от 11 до nn (включительно) квадрат которых оканчивается на 2, \, 52,5 или 88.
#
# Формат входных данных
# На вход программе подается натуральное число nn.
#
# Формат выходных данных
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Если таких чисел нет в указанном диапазоне, то следует вывести 00.
#
# Sample Input 1:
#
# 10
# Sample Output 1:
#
# 5

# Сумма чисел
# На вход программе подается натуральное число nn. Напишите программу, которая подсчитывает сумму тех чисел от 11 до nn (включительно) квадрат которых оканчивается на 2, \, 52,5 или 88.
#
# Формат входных данных
# На вход программе подается натуральное число nn.
#
# Формат выходных данных
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Если таких чисел нет в указанном диапазоне, то следует вывести 00.
#
# Sample Input 1:
#
# 10
# Sample Output 1:
#
# 5
#
# a=int(input())
# count=0
# for i in range(1, a+1):
#       if ((i**4)%10) == 2 or ((i**4)%10) == 5 or ((i**4)%10) == 8:
#              count +=i
#
# print(count)

# Факториал
# На вход программе подается натуральное число nn. Напишите программу, которая вычисляет n!n!.
#
# Входные данные
# На вход программе подается натуральное число n, \, (n \le 12)n,(n≤12).
#
# Выходные данные
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Факториалом натурального числа nn, называется произведение всех натуральных чисел от 11 до nn, то есть
# n!=1\cdot2\cdot3\cdot…\cdot n
# n!=1⋅2⋅3⋅…⋅n
# n=int(input())
# faktorial=1
# for i in range(1,n+1):
#        faktorial *= (i)
#
# print(faktorial)

# Без нулей
# Напишите программу, которая считывает 10 чисел и выводит произведение отличных от нуля чисел.
#
# Формат входных данных
# На вход программе подаются 10 целых чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести произведение отличных от нуля чисел.
#
# Примечание. Гарантируется, что хотя бы одно из 10 чисел является ненулевым.
#
# Sample Input 1:
#
# 8
# 0
# 1
# 2
# 1
# 0
# 0
# 5
# 4
# 12
# Sample Output 1:
#
# 3840
# total=1
# for i  in  range(10):
#        n= int(input())
#        if n!=0:
#           total *=n
# print(total)
#

# Сумма делителей
# На вход программе подается натуральное число nn. Напишите программу, которая вычисляет сумму всех его делителей.
#
# Входные данные
# На вход программе подается натуральное число nn.
#
# Выходные данные
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Функция подсчета суммы всех делителей числа является очень важной в теории чисел.
#
# Sample Input 1:
#
# 10
# Sample Output 1:
#
# 18
#
# n=int(input())
# total=0
# for i in range(1,n+1):
#        if n%i ==0:
#               total +=i
# print(total)

# Знакочередующаяся сумма
# На вход программе подается натуральное число nn. Напишите программу вычисления знакочередующей суммы
# 1-2+3-4+5-6 + \ldots + (-1)^{n+1}n.
# 1−2+3−4+5−6+…+(−1)
# n+1
#  n.
#
# Входные данные
# На вход программе подается натуральное число nn.
#
# Выходные данные
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Sample Input 1:
#
# 1
# Sample Output 1:
#
# 1

# n=int(input())
# total=0
# for i in range(1,n+1):
#        if i%2 ==0:
#             total -=i
#        else:
#             total +=i
# print(total)


# Наибольшие числа 🌶️🌶️
# На вход программе подается натуральное число nn, а затем nn различных натуральных чисел, каждое на отдельной строке. Напишите программу, которая выводит наибольшее и второе наибольшее число последовательности.
#
# Формат входных данных
# На вход программе подаются натуральное число n \ge 2n≥2, а затем nn различных натуральных чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести два наибольших числа, каждое на отдельной строке.
#
# Sample Input 1:
#
# 5
# 1
# 2
# 3
# 4
# 5
# Sample Output 1:
#
# 5
# 4
# Sample Input 2:
#
# 8
# 9
# 7
# 5
# 4
# 3
# 2
# 78
# 1


# n=int(input())
# prelarge=0
# large=0
# for i  in  range(n):
#     a = int(input())
#     if large>a:
#            large=a
#            prelarge=large
# print(large, prelarge)

# for i in range(1, 4):
#     for j in range(3, 5):
#         print(i + j, end='')
#
# counter = 0
# for i in range(99, 102):
#     temp = i
#     while temp > 0:
#         counter += 1
#         temp //= 10
# print(counter)

# n = int(input())
# for i in range(1,n+1):
#     for j in range (1, 4):
#         print(n, end=" ")
#     print()
#
# Таблица-2
# Дано натуральное число n \, (n \le 9)n (n≤ 9). Напишите программу, которая печатает таблицу размером n \times 5n×5, где в ii-ой строке указано число ii (числа отделены одним пробелом).
#
# Формат входных данных
# На вход программе подается одно натуральное число.
#
# Формат выходных данных
# Программа должна вывести таблицу размером n \times 5n×5 в соответствии с условием.
#
# Примечание. В конце строки может быть пробел.

# n = int(input())
# for i in range(1, n + 1):
#     for j in range(1, 6):
#         print(i, end=" ")
#     print()
#
# Таблица-3
# Дано натуральное число n \, (n \le 9)n (n≤ 9). Напишите программу, которая печатает таблицу сложения для всех чисел от 11 до nn в соответствии с примером.
#
# Формат входных данных
# На вход программе подается одно натуральное число.
#
# Формат выходных данных
# Программа должна вывести таблицу сложения для всех чисел от 11 до nn.
#
# Примечание. В конце строки может быть пробел.
#
# Sample Input 1:
#
# 1
# Sample Output 1:
#
# 1 + 1 = 2
# 1 + 2 = 3
# 1 + 3 = 4
# 1 + 4 = 5
# 1 + 5 = 6
# 1 + 6 = 7
# 1 + 7 = 8
# 1 + 8 = 9
# 1 + 9 = 10

# n = int(input())
# for i in range(1, n + 1):
#     for j in range(1, 10):
#         print(i, "+", j, "=", i+j)
#     print()

# Звездный треугольник 🌶️🌶️
# Дано нечетное натуральное число nn. Напишите программу, которая печатает равнобедренный звездный треугольник с основанием, равным nn в соответствии с примером:
#
# *
# **
# ***
# ****
# ***
# **
# *
# Формат входных данных
# На вход программе подается одно нечетное натуральное число.
#
# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.
#
# Примечание. Используйте вложенный цикл for.

# n = int(input())
# if n//2==0:
#     a = n//2
# else:
#     a = n // 2 + 1
# for i in range(1, a + 1):
#     for j in range(i):
#         print("*", end='')
#     print()
# for i in range(a - 1, 0, -1):
#     for j in range(i):
#         print("*", end='')
#     print()
#
# Численный треугольник 1
# Дано натуральное число nn. Напишите программу, которая печатает численный треугольник в соответствии с примером:
#
# 1
# 22
# 333
# 4444
# 55555
# ...
# Формат входных данных
# На вход программе подается одно натуральное число.
#
# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.
#
# Примечание. Используйте вложенный цикл for.
#
# Sample Input:
#
# 5
# Sample Output:
#
# 1
# 22
# 333
# 4444
# 55555

# n = int(input())
# for i in range(1, n + 1):
#     for j in range (i):
#         print(i, end='')
#     print()

# Задача 2. Найдите все пары натуральных чисел (и их количество) являющихся решением уравнения x^2+y^2+z^2 = 2020x
# 2
#  +y
# 2
#  +z
# 2
#  =2020.
#
# Решение.  Поскольку по условию числа x, \, yx,y и zz являются натуральными, то x, y, z \le \sqrt{2020} = 45x,y,z≤
# 2020
# ​
#  =45. Напишем программу, которая перебирает всевозможные тройки чисел (x; \, y; \, z)(x;y;z) и проверяет для них условие x^2+y^2+z^2 = 2020x
# 2
#  +y
# 2
#  +z
# 2
#  =2020.

# total = 0
# for x in range(1, 45):
#     for y in range(1, 45):
#         for z in range(1, 45):
#             if x ** 2 + y ** 2 + z ** 2 == 2020:
#                 total += 1
#                 print('x =', x, 'y =', y, 'z =', z)
# print('Общее количество натуральных решений =', total)

# Старинная задача
# Имеется 100100 рублей. Сколько быков, коров и телят можно купить на все эти деньги, если плата за быка – 1010 рублей, за корову – 55 рублей, за теленка – 0.50.5 рубля и надо купить 100100 голов скота?
#
# Примечание. Используйте вложенный цикл for.

# и быков b, коров c, телят d, то должны выполняться следующие условия:
#
# 10b + 5c + 0.5d = 100 (если можно, чтобы деньги остались, то вместо равенства надо поставить ≤)
#
# b + c + d = 100
#
# Можно поступить так: перебираем b, c, d от 0 до 100 и выводим эту тройку на экран, если выполняются оба условия.
#
# Псевдокод:
#
# для a от 0 до 100:
#
#    для b от 0 до 100:
#
#        для c от 0 до 100:
#
#            если (10b + 5c + 0.5d = 100) и (b + c + d = 100):
#
#                вывод a, b, c

# for x in range(1, 101):
#     for y in range(1, 101):
#         for z in range(1, 101):
#             if x * 10 + y * 5 + z * 0.5 == 100 and x + y + z == 100:
#                 print('Быков:', x, 'Коров:', y, 'Телят:', z)

# 12 месяцев
# Решите уравнение в натуральных числах 28n + 30 k + 31 m = 36528n+30k+31m=365.
#
# Примечание. Используйте вложенный цикл for. В первую очередь запишите решение с наименьшим значением nn.

# for x in range(1,365):
#     for y in range(1, 365):
#         for z in range(1, 365):
#             if 28 * x + 30 * y + 31 * z == 365:
#                 print(x, y, z)
#
# Численный треугольник 3
# Дано натуральное число nn. Напишите программу, которая печатает численный треугольник с высотой равной nn, в соответствии с примером:
#
# 1
# 2 3
# 4 5 6
# 7 8 9 10
# 11 12 13 14 15
# 16 17 18 19 20 21
# ...
#
# Формат входных данных
# На вход программе подается одно натуральное число.
#
# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.
#
# Примечание. Используйте вложенный цикл for.
#
# Sample Input:
#
# 3
# Sample Output:
#
# 1
# 2 3
# 4 5 6

# n = int(input())
# a = 1
# for i in range(1, n + 1):
#     for j in range(1, i + 1):
#         print(a, end=' ')
#         a +=1
#     print()
#
# Численный треугольник 4
# Дано натуральное число nn. Напишите программу, которая печатает численный треугольник с высотой равной nn, в соответствии с примером:
#
# 1
# 121
# 12321
# 1234321
# 123454321
# ...
# Формат входных данных
# На вход программе подается одно натуральное число.
#
# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием.
#
# Примечание. Используйте вложенный цикл for.
#
# Sample Input 1:
#
# 2
# Sample Output 1:
#
# 1
# 121
#
# n = int(input())
# a = 1
# for i in range(1, n + 1):
#     b = 0
#     for j in range(1, a + 1):
#            if (j <= i):
#                b = b + 1
#            else:
#                b = b - 1
#            print(b, end=' ')
#     print()
#     a = a + 2
#
# Делители-1 🌶️
# На вход программе подается два натуральных числа aa и bb (a < ba< b). Напишите программу, которая находит натуральное число из отрезка [a; \, b][a;b] с максимальной суммой делителей.
#
# Формат входных данных
# На вход программе подаются два числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести два числа на одной строке, разделенных пробелом: число с максимальной суммой делителей и сумму его делителей.
#
# Примечание. Если таких чисел несколько, то выведите наибольшее из них.
#
# Sample Input 1:
#
# 1
# 10
# Sample Output 1:
#
# 10 18

n1 = int(input())
n2 = int(input())
count = 0
max_count = 0
sum_count = 0
sum_c = 0
for i in range(n1, n2 + 1):
    for j in range(1, i + 1):
          if i % j == 0:
              count +=1
              sum_c +=j
              # print('число -', i, 'делитель -', j, 'кол делителей -',count, 'сумма делителей -',sum_c, end=' ')
          print(count,  end=' ')
    print()
#         if count >= max_count:
#             max_count = count
#             sum_count = sum_c
# print(max_count, sum_count)

