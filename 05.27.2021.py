# 1. Заполнение змейкой
#
# Даны числа n и m. Создайте массив A[n][m] и заполните его змейкой (см. пример).
#
# Входные данные
# Программа получает на вход два числа n и m.
#
# Выходные данные
# Программа должна вывести  полученный массив, при этом между числами может быть любое количество пробелов.
#
# Sample Input:
#
# 4 10
# Sample Output:
#
# 0  1  2  3  4  5  6  7  8  9
# 19 18 17 16 15 14 13 12 11 10
# 20 21 22 23 24 25 26 27 28 29
# 39 38 37 36 35 34 33 32 31 30
#
# n,c=map(int, input().split())
# x=0
# a=[]
# for i in range(n):
#     b=[]
#     for j in range (c):
#         x =(i*c)+j
#         b.append(x)
#     a.append(x)
# for i in range(c):
#     r=c-1
#     for j in range(c):
#         if i%2!=0:
#             while r!=0:
#                 print(a[i][r], end=" ")
#         else:
#             print(a[i][j], end=" ")
#     print()
#
# 2. 5.7 Вложенные списки, Часть 2
# 3 из 7 шагов пройдено
# 17 из 46 баллов  получено
# A. Фотографии Брейна
#
# Маленького, но очень смелого мышонка Брейна не взяли в летнюю школу юных злодеев. Он расстроился и решил отодвинуть свои планы по захвату мира, а вместо этого податься в фотографы.
#
# Как вам наверняка известно, самые крутые фотографии получаются на пленку (ведь тогда в хештегах можно указать #пленка).
#
# Брейн наснимал очень много красочных фотографий на цветную и черно-белую пленки. Затем проявил и перевел их в цифровой вид. Но вот незадача! Теперь цветные и черно-белые фотографии лежат в одной папке, и, чтобы их рассортировать, нужно потратить не один час!
#
# Так как Брейн теперь фотограф, а не программист, он просит вас помочь ему для одной фотографии определить, цветная она или черно-белая.
#
# Фотография представляет собой матрицу размера n × m, в каждой ячейке которой хранится символ, обозначающий цвет соответствующего пикселя. Всего существует 6 цветов:
#
# 'C' (cyan) — голубой
# 'M' (magenta) — пурпурный
# 'Y' (yellow) — желтый
# 'W' (white) — белый
# 'G' (grey) — серый
# 'B' (black) — черный
# Фотографию можно считать черно-белой, если в ней есть только белый, серый или черный цвет. Если же присутствует хоть один пиксель голубого, пурпурного или желтого цвета, она цветная.
#
# Входные данные
#
# В первой строке содержится два целых числа n и m (1 ≤ n, m ≤ 100) — количество строк и столбцов в матрице пикселей фотографии соответственно.
#
# Далее следуют n строк, описывающих строки матрицы. Каждая из них состоит из m разделенных пробелом символов, описывающих цвета пикселей в строке. Каждый из символов в строке является одним из символов 'C', 'M', 'Y', 'W', 'G' или 'B'.
#
# Выходные данные
#
# В единственной строчке выведите «#Black&White» (без кавычек), если фотография черно-белая, и «#Color» (без кавычек), если цветная.
#
# Sample Input 1:
#
# 2 2
# C M
# Y Y
# Sample Output 1:
#
# #Color
# Sample Input 2:
#
# 3 2
# W W
# W W
# B B
# Sample Output 2:
#
# #Black&White

# n, m = map(int, input().split())
# a = []
#
# for el in range(n):
#     a.append(list(map(str, input().split())))
#
# count = 0
#
# for i in range(n):
#     for j in range(m):
#         if a[i][j] == 'C' or a[i][j] == 'M' or a[i][j] == 'Y':
#             count += 1
# if count != 0:
#     print('#Color')
# else:
#     print('#Black&White')
#
# 3. 6.1 Словари Python. Операции и методы словаря
# 1 из 11 шагов пройден
# 0 из 27 баллов  получено
# На вход программе поступает целое число n. Вам необходимо создать словарь, который будет включать в себя ключи от 1 до n, а значениями соответствующего ключа будет значение ключа в квадрате.
#
# В качестве ответа выведите полученный словарь
#
# Sample Input:
#
# 20
# Sample Output:
#
# {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64, 9: 81, 10: 100, 11: 121, 12: 144, 13: 169, 14: 196, 15: 225, 16: 256, 17: 289, 18: 324, 19: 361, 20: 400}

# from string import ascii_lowercase
# a = ascii_lowercase
# print(a)
# alfphabet={}
# count=0
# for i in a[:]:
#     count +=1
#     alfphabet.setdefault(i,count)
#     alfphabet.items()
# for i  in alfphabet.items():
#     print(*i)


# 6.1 Словари Python. Операции и методы словаря
# 4 из 11 шагов пройдено
# 6 из 27 баллов  получено
# Есть два словаря, нужно их объединить в новый словарь rez и вывести его на экран
#
# Sample Input:
#
# Sample Output:
#
# {'a': 100, 'b': 200, 'c': 333, 'x': 300, 'y': 200, 'z': 777}



# d1 = {'a': 100, 'b': 200, 'c': 333}
# d2 = {'x': 300, 'y': 200, 'z': 777}
# rez=[]
# for i in d1.items():
#     rez.append(i)
# for i in d2.items():
#     rez.append(i)
# rez=dict(rez)
# print(rez)

# Система регистрации
# В скором времени в Берляндии откроется новая почтовая служба "Берляндеск". Администрация сайта хочет запустить свой проект как можно быстрее, поэтому они попросили Вас о помощи. Вам предлагается реализовать прототип системы регистрации сайта.
#
# Система должна работать по следующему принципу. Каждый раз, когда новый пользователь хочет зарегистрироваться, он посылает системе запрос name со своим именем. Если данное имя не содержится в базе данных системы, то оно заносится туда и пользователю возвращается ответ OK, подтверждающий успешную регистрацию. Если же на сайте уже присутствует пользователь с именем name, то система формирует новое имя и выдает его пользователю в качестве подсказки, при этом подсказка также добавляется в базу данных. Новое имя формируется по следующему правилу. К name последовательно приписываются числа, начиная с единицы (name1, name2, ...), и среди них находят такое наименьшее i, что namei не содержится в базе данных сайта.
#
# Входные данные
# В первой строке входных данных задано число n (1 ≤ n ≤ 105). Следующие n строк содержат запросы к системе. Каждый запрос представляет собой непустую строку длиной не более 32 символов, состоящую только из строчных букв латинского алфавита.
#
# Выходные данные
# В выходных данных должно содержаться n строк — ответы системы на запросы: OK в случае успешной регистрации, или подсказку с новым именем, если запрашиваемое уже занято.
#
# Разбор Youtube Patreon Boosty
#
# Sample Input 1:
#
# 4
# abc
# abcd
# abc
# acab
# Sample Output 1:
#
# OK
# OK
# abc1
# OK

# logins={}
# n = int(input())
# for i in range(n):
#     login = input()
#     if login in logins:
#         print((f'{login}{logins[login]}'))
#         logins[login]+=1
#     else:
#          print("OK")
#          logins[login]=1

# 6.1 Словари Python. Операции и методы словаря
# 6 из 11 шагов пройдено
# 12 из 27 баллов  получено
# Представьте, у нас есть список товаров и их стоимость, но мы хотим взглянуть на него в отсортированном виде. Вверху хотим видеть самые дорогие товары, внизу самые дешевые
#
# Программа будет принимать строки, в которых сперва указывается название товара, а затем через двоеточие с пробелом его цена - целое положительное число.
#
# Строка "конец" означает списка товаров и соответственно окончание ввода
#
# Все товары имеют уникальные названия, цены не дублируются.
#
# Ваша задача вывести список товаров по уменьшению цены
#
# Sample Input:
#
# Sony PlayStation 5: 46000
# Телевизор QLED Samsung QE65Q60TAU: 87090
# Смартфон Samsung Galaxy A11: 10000
# Планшет Samsung Galaxy Tab S6: 26600
# конец
# Sample Output:
#
# Телевизор QLED Samsung QE65Q60TAU
# Sony PlayStation 5
# Планшет Samsung Galaxy Tab S6
# Смартфон Samsung Galaxy A11

# a=int(input())
# b=int(input())
# print(a,"+", b, '=',a+b)
# print(a+" +"+ b+'=',a+b)

# Трехзначное число
# Напишите программу, в которой рассчитывается сумма и произведение цифр положительного трёхзначного числа.
#
# Формат входных данных
# На вход программе подаётся положительное трёхзначное число.
#
# Формат выходных данных
# Программа должна вывести два числа с поясняющим текстом: сумма цифр и произведение цифр.
#
# Sample Input 1:
#
# 123
# Sample Output 1:
#
# Сумма цифр = 6
# Произведение цифр = 6
# n=int(input())
# a = n % 10 # последнее  число
# b = (n % 100) // 10 # второе  число
# c = n // 100 #  третее число
# print(f'Сумма цифр = {a+b+c}')
# print(f'Произведение цифр = {a*b*c}')


# Перестановка цифр
# Дано трехзначное число \overline{abc}
# abc
#  , в котором все цифры различны. Напишите программу, которая выводит шесть чисел, образованных при перестановке цифр заданного числа.
#
# Формат входных данных
# На вход программе подаётся положительное трёхзначное целое число, все цифры которого различны.
#
# Формат выходных данных
# Программа должна вывести шесть чисел, образованных при перестановке цифр заданного числа в следующем порядке: abc, \, acb, \, bac, \, bca, \, cab, \, cbaabc,acb,bac,bca,cab,cba.
# n=int(input())
# a=n//100
# b=(n%100)//10
# c=n%10
#
# print(a,b,c,"\n", a,c,b,"\n",b,a,c,"\n",b,c,a,"\n",c,a,b,"\n",c,b,a, sep = "")
#
# Четырёхзначное число
# Напишите программу для нахождения цифр четырёхзначного числа.
#
# Формат входных данных
# На вход программе подаётся положительное четырёхзначное целое число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

#
# Пароль
# При регистрации на сайтах требуется вводить пароль дважды. Это сделано для безопасности, поскольку такой подход уменьшает возможность неверного ввода пароля.
#
# Напишите программу, которая сравнивает пароль и его подтверждение. Если они совпадают, то программа выводит: «Пароль принят», иначе: «Пароль не принят».
#
# Формат входных данных
# На вход программе подаются две строки.
#
# Формат выходных данных
# Программа должна вывести одну строку в соответствии с условием задачи.
#
# Sample Input 1:
#
# qwerty
# qwerty
# Sample Output 1:
#
# Пароль принят
#
# a=input()
# b=input()
# if a==b:
#     print('Пароль принят')
# else:
#     print('Пароль не принят')
#
# Четное или нечетное?
# Напишите программу, которая определяет, является число четным или нечетным.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести «Четное», если число четное, и «Нечетное» — если число нечетное.
#
# Sample Input 1:
#
# 10
# Sample Output 1:
#
# Четное
#
# n=int(input())
# if n%2==0:
#     print('Четное')
# else:
#     print('Нечетное')
#
# Соотношение
# Напишите программу, которая проверяет, что для заданного четырехзначного числа выполняется следующее соотношение: сумма первой и последней цифр равна разности второй и третьей цифр.
#
# Формат входных данных
# На вход программе подаётся одно целое положительное четырёхзначное число.
#
# Формат выходных данных
# Программа должна вывести «ДА», если соотношение выполняется, и «НЕТ» — если не выполняется.
#
# Sample Input 1:
#
# 1614
# Sample Output 1:
#
# ДА

# n=int(input())
# a=n//1000
# b=n%1000//100
# c=n%100//10
# d=n%10
# if a+d==b-c:
#     print('ДА')
# else:
#     print('НЕТ')
# # print(a,b,c,d)
#
# Роскомнадзор
# Напишите программу, которая определяет, разрешен пользователю доступ к интернет-ресурсу или нет.
#
# Формат входных данных
# На вход программе подаётся целое число — возраст пользователя.
#
# Формат выходных данных
# Программа должна вывести текст «Доступ разрешен» если возраст не менее 18, и «Доступ запрещен» в противном случае.
#
# Sample Input 1:
#
# 16
# Sample Output 1:
#
# Доступ запрещен
# Sample Input 2:
#
# 18
# Sample Output 2:
#
# Доступ разрешен
# Sample Input 3:
#
# 19
# Sample Output 3:
#
# Доступ разрешен
#
# n=int(input())
# if n>=18:
#     print("Доступ разрешен")
# else:
#     print("Доступ запрещен")


#
# Наименьшее из двух чисел
# Напишите программу, которая определяет наименьшее из двух чисел.
#
# Формат входных данных
# На вход программе подаётся два различных целых числа.
#
# Формат выходных данных
# Программа должна вывести наименьшее из двух чисел.
#
# Sample Input 1:
#
# 8
# 11
# Sample Output 1:
#
# 8
#
# a=int(input())
# b=int(input())
# if a<b:
#     print(a)
# else:
#     print(b)
#
#
# Наименьшее из четырёх чисел 🌶️
# Напишите программу, которая определяет наименьшее из четырёх чисел.
#
# Формат входных данных
# На вход программе подаётся четыре целых числа.
#
# Формат выходных данных
# Программа должна вывести наименьшее из четырёх чисел.
#
# Sample Input 1:
#
# 1
# 2
# 3
# 4
# Sample Output 1:
#
# 1
#
# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
# #
# a =int(input())
# b =int(input())
# c =int(input())
# d =int(input())

# a=int(input())
# b=int(input())
# c=int(input())
# d=int(input())
#
# if a<b and a<c and a<d:
#     print(a)
# elif b<a and b<c and b<d:
#     print(b)
# elif c<a and c<d and c<b:
#     print(c)
# else:
#     print(d)
#
# Возрастная группа
# Напишите программу, которая по введённому возрасту пользователя сообщает, к какой возрастной группе он относится:
#
# до 13 включительно – детство;
# от 14 до 24 – молодость;
# от 25 до 59 – зрелость;
# от 60 – старость.
# Формат входных данных
# На вход программе подаётся одно целое число – возраст пользователя.
#
# Формат выходных данных
# Программа должна вывести название возрастной группы.
#
# Sample Input 1:
#
# 4
# Sample Output 1:
#
# детство
#
# n=int(input())
# if 0<=n<=13:
#     print("детство")
# elif 14<=n<=24:
#     print('молодость')
# elif 25<=n<=59:
#     print('зрелость')
# else:
#     print('старость')

# Только + 🌶️
# Напишите программу, которая считывает три числа и подсчитывает сумму только положительных чисел.
#
# Формат входных данных
# На вход программе подаются три целых числа.
#
# Формат выходных данных
# Программа должна вывести одно число – сумму положительных чисел.
#
# Примечание. Если положительных чисел нет, то следует вывести 00.
#
# Sample Input 1:
#
# 4
# -22
# 1
# Sample Output 1:
#
# 5

a=int(input())
b=int(input())
c=int(input())
sum=0
if a>=0:
    a=a
else:
    a=0
if b>=0:
   b=b
else:
   b=0
if c>=0:
   c=c
else:
   c=0
print(a+b+c)